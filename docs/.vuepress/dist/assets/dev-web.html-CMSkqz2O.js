import{_ as l,o as e,c as i,e as t}from"./app-CkeFUswH.js";const s={},n=t('<h1 id="web-开发模式选型" tabindex="-1"><a class="header-anchor" href="#web-开发模式选型"><span>Web 开发模式选型</span></a></h1><h2 id="_1-两种主流开发模式" tabindex="-1"><a class="header-anchor" href="#_1-两种主流开发模式"><span>1. 两种主流开发模式</span></a></h2><div class="custom-container tip"><p class="custom-container-title">概要</p><p>目前主流的 Web 开发模式有 2 种：</p><ul><li>基于 <strong>服务端渲染</strong> 的传统 Web 开发模式</li><li>基于 <strong>前后端分离</strong> 的新型 Web 开发模式</li></ul></div><h2 id="_2-两种模式的-优缺点" tabindex="-1"><a class="header-anchor" href="#_2-两种模式的-优缺点"><span>2. 两种模式的 优缺点</span></a></h2><div class="custom-container tip"><p class="custom-container-title">技术选型</p><p>具体需要选用哪种开发模式，视情况而定，要看应用的侧重点是 SEO 还是 交互体验，又或者同一个项目 使用两种开发模式。</p></div><h3 id="_1-服务端渲染模式" tabindex="-1"><a class="header-anchor" href="#_1-服务端渲染模式"><span>1. 服务端渲染模式</span></a></h3><div class="custom-container tip"><p class="custom-container-title">概要</p><ul><li>服务器发送给客户端的 HTML 页面，是在服务器通过字符串的拼接，动态生成的。</li><li>客户端不需要使用 Ajax 这样的技术额外请求页面的数据。</li></ul></div><ul><li><p>优点：</p><ul><li>① <strong>前端耗时少</strong>。因为服务器端负责动态生成 HTML 内容，浏览器只需要直接渲染页面即可。尤其是移动端，更省电。</li><li>② <strong>有利于 SEO</strong>。因为服务器端响应的是完整的 HTML 页面内容，所以爬虫更容易爬取获得信息，更有利于 SEO。</li></ul></li><li><p>缺点：</p><ul><li>① <strong>占用服务器端资源</strong>。即服务器端完成 HTML 页面内容的拼接，如果请求较多，会对服务器造成一定的访问压力。</li><li>② <strong>不利于前后端分离，开发效率低</strong>。使用服务器端渲染，则无法进行分工合作，尤其对于前端复杂度高的项目，不利于项目高效开发。</li></ul></li></ul><h3 id="_2-前后端分离模式" tabindex="-1"><a class="header-anchor" href="#_2-前后端分离模式"><span>2. 前后端分离模式</span></a></h3><div class="custom-container tip"><p class="custom-container-title">概要</p><ul><li>前后端分离的开发模式，依赖于 Ajax 技术的广泛应用。</li><li>后端只负责提供 API 接口，前端使用 Ajax 调用接口的开发模式</li></ul></div><ul><li><p>优点：</p><ul><li>① <strong>开发体验好</strong>。前端专注于 UI 页面的开发，后端专注于 api 的开发，且前端有更多的选择性。</li><li>② <strong>用户体验好</strong>。Ajax 技术的广泛应用，极大的提高了用户的体验，可以轻松实现页面的局部刷新。</li><li>③ <strong>减轻了服务器端的渲染压力</strong>。因为页面最终是在每个用户的浏览器中生成的。</li></ul></li><li><p>缺点：</p><ul><li>① <strong>不利于 SEO</strong>。因为完整的 HTML 页面需要在客户端动态拼接完成，所以爬虫对无法爬取页面的有效信息。（解决方案：利用 Vue、React 等前端框架的 SSR （server side render）技术能够很好的解决 SEO 问题）</li></ul></li></ul>',11),a=[n];function r(o,c){return e(),i("div",null,a)}const p=l(s,[["render",r],["__file","dev-web.html.vue"]]),u=JSON.parse('{"path":"/frontend/source/article/dev-web.html","title":"Web 开发模式选型","lang":"en-US","frontmatter":{},"headers":[{"level":2,"title":"1. 两种主流开发模式","slug":"_1-两种主流开发模式","link":"#_1-两种主流开发模式","children":[]},{"level":2,"title":"2. 两种模式的 优缺点","slug":"_2-两种模式的-优缺点","link":"#_2-两种模式的-优缺点","children":[{"level":3,"title":"1. 服务端渲染模式","slug":"_1-服务端渲染模式","link":"#_1-服务端渲染模式","children":[]},{"level":3,"title":"2. 前后端分离模式","slug":"_2-前后端分离模式","link":"#_2-前后端分离模式","children":[]}]}],"git":{"updatedTime":1681876227000,"contributors":[{"name":"唐干宵","email":"1587900660@qq.com","commits":1}]},"filePathRelative":"frontend/source/article/dev-web.md"}');export{p as comp,u as data};
