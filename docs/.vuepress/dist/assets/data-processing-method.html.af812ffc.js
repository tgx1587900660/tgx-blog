import{_ as n,o as s,c as a,e as t}from"./app.a6f9caea.js";const p={},e=t(`<h1 id="javascript-\u6570\u636E\u5904\u7406" tabindex="-1"><a class="header-anchor" href="#javascript-\u6570\u636E\u5904\u7406" aria-hidden="true">#</a> JavaScript \u6570\u636E\u5904\u7406</h1><h2 id="_1-\u6570\u7EC4" tabindex="-1"><a class="header-anchor" href="#_1-\u6570\u7EC4" aria-hidden="true">#</a> 1. \u6570\u7EC4</h2><div class="custom-container tip"><p class="custom-container-title">\u8BF4\u660E</p><p>\u8BB0\u5F55\u4E86\u4E00\u4E9B\u5904\u7406\u6570\u7EC4\u7684\u65B0\u65B9\u6CD5\u53CA\u5176\u7279\u6027</p></div><h3 id="_1-foreach" tabindex="-1"><a class="header-anchor" href="#_1-foreach" aria-hidden="true">#</a> 1. forEach()</h3><div class="custom-container tip"><p class="custom-container-title">\u65B9\u6CD5\u7279\u6027</p><ul><li>forEach() \u88AB\u8C03\u7528\u65F6\uFF0C<strong>\u4E0D\u4F1A\u6539\u53D8\u539F\u6570\u7EC4</strong>\uFF08\u5C3D\u7BA1\u5B83\u7684\u56DE\u8C03\u51FD\u6570\u53EF\u80FD\u4F1A\u6539\u53D8\u539F\u6570\u7EC4\uFF09</li><li>\u8FD4\u56DE\u503C\u662F undefined</li><li>\u5FAA\u73AF\u8FC7\u7A0B\u4E2D\uFF0C\u4E0D\u80FD\u7EC8\u6B62\u5FAA\u73AF</li></ul></div><details class="custom-container details"><summary>\u70B9\u51FB\u67E5\u770B\u65B9\u6CD5\u7279\u6027</summary><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u6253\u5370 \u6210\u5458\u540D \u548C \u6210\u5458 &#39;c&#39; \u7684\u7D22\u5F15</span>

<span class="token keyword">const</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;a&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;b&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;c&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;d&#39;</span><span class="token punctuation">]</span>

<span class="token keyword">const</span> result <span class="token operator">=</span> arr<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">item<span class="token punctuation">,</span> index</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>item <span class="token operator">===</span> <span class="token string">&#39;c&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;item:&#39;</span><span class="token punctuation">,</span> item<span class="token punctuation">)</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;index:&#39;</span><span class="token punctuation">,</span> index<span class="token punctuation">)</span>
    <span class="token keyword">return</span>
  <span class="token punctuation">}</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;item:&#39;</span><span class="token punctuation">,</span> item<span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;result:&#39;</span><span class="token punctuation">,</span> <span class="token keyword">undefined</span><span class="token punctuation">)</span>

<span class="token comment">// \u6253\u5370\u7ED3\u679C\uFF1A</span>
<span class="token comment">// item: a</span>
<span class="token comment">// item: b</span>
<span class="token comment">// item: c</span>
<span class="token comment">// index: 2</span>
<span class="token comment">// item: d \uFF08\u6EE1\u8DB3 item === &#39;c&#39; \u6761\u4EF6 return \u4E86\uFF0C\u7167\u6837\u8F93\u51FA\u4E86 d\uFF09</span>
<span class="token comment">// result: undefined</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details><h3 id="_2-some" tabindex="-1"><a class="header-anchor" href="#_2-some" aria-hidden="true">#</a> 2. some()</h3><div class="custom-container tip"><p class="custom-container-title">\u65B9\u6CD5\u7279\u6027</p><ul><li>some() \u88AB\u8C03\u7528\u65F6\uFF0C<strong>\u4E0D\u4F1A\u6539\u53D8\u539F\u6570\u7EC4</strong></li><li>\u8FD4\u56DE\u4E00\u4E2A Boolean \u503C</li><li>\u5FAA\u73AF\u8FC7\u7A0B\u4E2D\uFF0C\u53EF\u4EE5\u7EC8\u6B62\u5FAA\u73AF</li><li>\u53EF\u7528\u6765\u68C0\u6D4B\u6570\u7EC4\u6210\u5458\u662F\u5426\u6EE1\u8DB3\u9700\u6C42\uFF0C\u4E5F\u53EF\u4EE5\u6309\u9700\u7EC8\u6B62\u5FAA\u73AF</li></ul></div><details class="custom-container details"><summary>\u70B9\u51FB\u67E5\u770B\u65B9\u6CD5\u7279\u6027</summary><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u6309\u9700\u6253\u5370\u6210\u5458 (\u5982\u679C \u6210\u5458\u662F &#39;c&#39; \u5C31\u7EC8\u6B62\u5FAA\u73AF)</span>

<span class="token keyword">const</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;a&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;b&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;c&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;d&#39;</span><span class="token punctuation">]</span>

<span class="token keyword">const</span> result <span class="token operator">=</span> arr<span class="token punctuation">.</span><span class="token function">some</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">item<span class="token punctuation">,</span> index</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>item <span class="token operator">===</span> <span class="token string">&#39;c&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;item:&#39;</span><span class="token punctuation">,</span> item<span class="token punctuation">)</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;index:&#39;</span><span class="token punctuation">,</span> index<span class="token punctuation">)</span>
    <span class="token keyword">return</span> <span class="token boolean">true</span>
  <span class="token punctuation">}</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;item:&#39;</span><span class="token punctuation">,</span> item<span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;result:&#39;</span><span class="token punctuation">,</span> result<span class="token punctuation">)</span>

<span class="token comment">// \u6253\u5370\u7ED3\u679C\uFF1A</span>
<span class="token comment">// item: a</span>
<span class="token comment">// item: b</span>
<span class="token comment">// item: c</span>
<span class="token comment">// index: 2</span>
<span class="token comment">// result: true</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details><h3 id="_3-every" tabindex="-1"><a class="header-anchor" href="#_3-every" aria-hidden="true">#</a> 3. every()</h3><div class="custom-container tip"><p class="custom-container-title">\u65B9\u6CD5\u7279\u6027</p><ul><li>every() \u88AB\u8C03\u7528\u65F6\uFF0C<strong>\u4E0D\u4F1A\u6539\u53D8\u539F\u6570\u7EC4</strong></li><li>\u8FD4\u56DE\u4E00\u4E2A truthy \u503C (\u4E00\u822C\u5C31\u8BA4\u4E3A\u5B83\u8FD4\u56DE true \u6216 false)</li><li>\u5FAA\u73AF\u8FC7\u7A0B\u4E2D\uFF0C\u53EF\u4EE5\u7EC8\u6B62\u5FAA\u73AF</li><li>\u7528\u6765\u68C0\u6D4B\u6570\u7EC4\u6210\u5458\u662F\u5426\u6EE1\u8DB3\u9700\u6C42\uFF0C\u53EA\u8981\u6709\u4E00\u4E2A\u4E0D\u6EE1\u8DB3\u8981\u6C42\uFF0C\u7ACB\u5373\u7EC8\u6B62\u5FAA\u73AF\u8FD4\u56DE false</li><li>\u4F7F\u7528\u5B83\u7684\u65F6\u5019 <strong>\u4E00\u5B9A\u8981\u5148\u5224\u65AD\u6570\u7EC4\u662F\u5426\u4E3A\u7A7A</strong></li></ul></div><details class="custom-container details"><summary>\u70B9\u51FB\u67E5\u770B\u65B9\u6CD5\u7279\u6027</summary><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u5224\u65AD \u662F\u5426\u6240\u6709\u6570\u7EC4\u5143\u7D20 \u90FD \u5C0F\u4E8E3</span>
<span class="token keyword">const</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">]</span>

<span class="token keyword">const</span> result <span class="token operator">=</span> arr<span class="token punctuation">.</span><span class="token function">every</span><span class="token punctuation">(</span><span class="token parameter">item</span> <span class="token operator">=&gt;</span> item <span class="token operator">&lt;</span> <span class="token number">3</span><span class="token punctuation">)</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;result:&#39;</span><span class="token punctuation">,</span> result<span class="token punctuation">)</span>

<span class="token comment">// \u6253\u5370\u7ED3\u679C\uFF1A</span>
<span class="token comment">// result: false (\u5F53 item \u662F 3 \u7684\u65F6\u5019\u53D1\u73B0\u4E0D\u7B26\u5408\u8981\u6C42, \u5C31\u7ACB\u5373\u8FD4\u56DE false, \u7EC8\u6B62\u5FAA\u73AF)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details><div class="custom-container warning"><p class="custom-container-title">every() \u65B9\u6CD5\u7684\u4F8B\u5916</p><p>\u5982\u679C\u6D4B\u8BD5\u7684\u662F\u7A7A\u6570\u7EC4\uFF0C\u5B83\u4F1A\u76F4\u63A5\u8FD4\u56DE true\uFF0C\u8FD9\u79CD\u60C5\u51B5\u5C5E\u4E8E <strong>\u65E0\u6761\u4EF6\u6B63\u786E</strong>\uFF08\u6570\u5B66\u4E0A\u7684\u6982\u5FF5\uFF09\uFF0C \u4E00\u822C\u5728\u4F7F\u7528 every \u65F6\uFF0C\u5224\u65AD\u6570\u7EC4\u662F\u5426\u4E3A\u7A7A\u5373\u53EF</p></div><details class="custom-container details"><summary>\u70B9\u51FB\u67E5\u770B\u7279\u6B8A\u4F8B\u5B50</summary><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u5224\u65AD \u662F\u5426\u6240\u6709\u6570\u7EC4\u5143\u7D20 \u90FD \u5C0F\u4E8E3</span>
<span class="token keyword">const</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>

<span class="token keyword">const</span> result <span class="token operator">=</span> arr<span class="token punctuation">.</span><span class="token function">every</span><span class="token punctuation">(</span><span class="token parameter">item</span> <span class="token operator">=&gt;</span> item <span class="token operator">&lt;</span> <span class="token number">3</span><span class="token punctuation">)</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;result:&#39;</span><span class="token punctuation">,</span> result<span class="token punctuation">)</span>

<span class="token comment">// \u6253\u5370\u7ED3\u679C\uFF1A</span>
<span class="token comment">// result: true</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details><h3 id="_4-filter" tabindex="-1"><a class="header-anchor" href="#_4-filter" aria-hidden="true">#</a> 4. filter()</h3><div class="custom-container tip"><p class="custom-container-title">\u65B9\u6CD5\u7279\u6027</p><ul><li>filter() \u88AB\u8C03\u7528\u65F6\uFF0C<strong>\u4E0D\u4F1A\u6539\u53D8\u539F\u6570\u7EC4</strong></li><li>\u8FD4\u56DE\u4E00\u4E2A\u7B26\u5408\u6D4B\u8BD5\u6761\u4EF6\u7684 <strong>\u65B0\u6570\u7EC4</strong></li><li>\u5FAA\u73AF\u8FC7\u7A0B\u4E2D\uFF0C\u4E0D\u80FD\u7EC8\u6B62\u5FAA\u73AF</li><li>\u53EF\u4EE5\u7528\u6765\u8FC7\u6EE4\u6570\u7EC4\uFF0C\u4E5F\u53EF\u4EE5\u7528\u4E8E\u6570\u7EC4\u53BB\u91CD</li></ul></div><details class="custom-container details"><summary>\u70B9\u51FB\u67E5\u770B\u65B9\u6CD5\u7279\u6027</summary><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// 1. \u53D6\u51FA \u5C0F\u4E8E3 \u7684\u5143\u7D20</span>

<span class="token keyword">const</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">]</span>

<span class="token keyword">const</span> result <span class="token operator">=</span> arr<span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token parameter">item</span> <span class="token operator">=&gt;</span> item <span class="token operator">&lt;</span> <span class="token number">3</span><span class="token punctuation">)</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;result:&#39;</span><span class="token punctuation">,</span> result<span class="token punctuation">)</span>

<span class="token comment">// \u6253\u5370\u7ED3\u679C\uFF1A</span>
<span class="token comment">// result: [1, 2]</span>

<span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">-</span>

<span class="token comment">// 2. \u6570\u7EC4\u53BB\u91CD</span>

<span class="token keyword">const</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">]</span>

<span class="token keyword">const</span> result <span class="token operator">=</span> arr<span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">item<span class="token punctuation">,</span> index<span class="token punctuation">,</span> arr</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> arr<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span> <span class="token operator">===</span> index<span class="token punctuation">)</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;result:&#39;</span><span class="token punctuation">,</span> result<span class="token punctuation">)</span>

<span class="token comment">// \u6253\u5370\u7ED3\u679C\uFF1A</span>
<span class="token comment">// result: [1, 2, 3, 4, 5]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details><h3 id="_5-reduce" tabindex="-1"><a class="header-anchor" href="#_5-reduce" aria-hidden="true">#</a> 5. reduce()</h3><div class="custom-container tip"><p class="custom-container-title">\u65B9\u6CD5\u7279\u6027</p><ul><li>reduce() \u88AB\u8C03\u7528\u65F6\uFF0C<strong>\u4E0D\u4F1A\u6539\u53D8\u539F\u6570\u7EC4</strong></li><li>\u8FD4\u56DE\u4E00\u4E2A <strong>\u7D2F\u52A0\u7ED3\u679C</strong></li><li>\u4E00\u822C\u7528\u6765\u505A\u7D2F\u52A0\u5668</li></ul></div><details class="custom-container details"><summary>\u70B9\u51FB\u67E5\u770B\u65B9\u6CD5\u7279\u6027</summary><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u8BA1\u7B97 (0+1+2+3+4)*10 \u7684\u7ED3\u679C</span>

<span class="token keyword">const</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">]</span>

<span class="token comment">// arr.reduce((\u5F53\u524D\u7D2F\u52A0\u7684\u7ED3\u679C, \u5F53\u524D\u5FAA\u73AF\u9879) =&gt; \u7D2F\u52A0\u7684\u8BA1\u7B97\u8868\u8FBE\u5F0F, \u521D\u59CB\u503C)</span>
<span class="token keyword">const</span> result <span class="token operator">=</span> arr<span class="token punctuation">.</span><span class="token function">reduce</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">sum<span class="token punctuation">,</span> item</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> sum <span class="token operator">+=</span> item <span class="token operator">*</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;result:&#39;</span><span class="token punctuation">,</span> result<span class="token punctuation">)</span>

<span class="token comment">// \u6253\u5370\u7ED3\u679C\uFF1A</span>
<span class="token comment">// result: 100</span>

<span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">-</span>

<span class="token comment">// \u5BF9\u6BD4\u4E00\u4E0B\u666E\u901A\u7D2F\u52A0\u65B9\u6CD5\uFF0C\u53EF\u4EE5\u53D1\u73B0 reduce \u4E0D\u9700\u8981\u989D\u5916\u5B9A\u4E49\u4E00\u4E2A sum \u6765\u5B58\u50A8\u7D2F\u52A0\u503C</span>
<span class="token keyword">const</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">]</span>
<span class="token keyword">let</span> sum <span class="token operator">=</span> <span class="token number">0</span>
arr<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token parameter">item</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    sum <span class="token operator">+=</span> item <span class="token operator">*</span> <span class="token number">10</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;result:&#39;</span><span class="token punctuation">,</span> sum<span class="token punctuation">)</span>

<span class="token comment">// \u6253\u5370\u7ED3\u679C\uFF1A</span>
<span class="token comment">// result: 100</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details><h2 id="_2-\u5DE5\u5177\u51FD\u6570\u5C01\u88C5" tabindex="-1"><a class="header-anchor" href="#_2-\u5DE5\u5177\u51FD\u6570\u5C01\u88C5" aria-hidden="true">#</a> 2. \u5DE5\u5177\u51FD\u6570\u5C01\u88C5</h2><div class="custom-container tip"><p class="custom-container-title">\u8BF4\u660E</p><p>\u5C01\u88C5\u4E86\u4E00\u4E9B\u5E38\u7528\u7684\u5DE5\u5177\u65B9\u6CD5\uFF0C\u76F4\u63A5\u590D\u5236\u5C31\u53EF\u4EE5\u4F7F\u7528\u3002</p></div><h3 id="_1-\u968F\u673A\u83B7\u53D6\u6570\u7EC4\u4E2D\u7684\u4E00\u4E2A\u5143\u7D20" tabindex="-1"><a class="header-anchor" href="#_1-\u968F\u673A\u83B7\u53D6\u6570\u7EC4\u4E2D\u7684\u4E00\u4E2A\u5143\u7D20" aria-hidden="true">#</a> 1. \u968F\u673A\u83B7\u53D6\u6570\u7EC4\u4E2D\u7684\u4E00\u4E2A\u5143\u7D20</h3><details class="custom-container details"><summary>\u70B9\u51FB\u67E5\u770B\u4EE3\u7801</summary><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u4F20\u5165\u4E00\u4E2A\u6570\u7EC4, \u968F\u673A\u8FD4\u56DE\u5B83\u7684\u67D0\u4E00\u4E2A\u5143\u7D20</span>
<span class="token function">getRandomElement</span><span class="token punctuation">(</span><span class="token parameter">arr</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> min <span class="token operator">=</span> <span class="token number">0</span>
  <span class="token keyword">const</span> max <span class="token operator">=</span> arr<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span>
  <span class="token keyword">const</span> random <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token punctuation">(</span>max <span class="token operator">-</span> min <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">+</span> min
  <span class="token keyword">return</span> arr<span class="token punctuation">[</span>random<span class="token punctuation">]</span>
<span class="token punctuation">}</span>

<span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span>test<span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span>

<span class="token function">getRandomElement</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token comment">// 2</span>
<span class="token function">getRandomElement</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token comment">// 6</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details><h3 id="_2-\u7ED9\u6570\u7EC4\u5206\u533A\u95F4" tabindex="-1"><a class="header-anchor" href="#_2-\u7ED9\u6570\u7EC4\u5206\u533A\u95F4" aria-hidden="true">#</a> 2. \u7ED9\u6570\u7EC4\u5206\u533A\u95F4</h3><details class="custom-container details"><summary>\u70B9\u51FB\u67E5\u770B\u4EE3\u7801</summary><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u4F20\u5165\u4E00\u4E2A \u6570\u7EC4 \u548C \u533A\u95F4\u5927\u5C0F, \u8FD4\u56DE \u5206\u597D\u533A\u95F4\u7684 \u4E8C\u7EF4\u6570\u7EC4</span>

<span class="token function">chunk</span><span class="token punctuation">(</span><span class="token parameter">arr<span class="token punctuation">,</span> size</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> <span class="token punctuation">[</span>start<span class="token punctuation">,</span> end<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">]</span>
  <span class="token keyword">const</span> result <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> Math<span class="token punctuation">.</span><span class="token function">ceil</span><span class="token punctuation">(</span>arr<span class="token punctuation">.</span>length <span class="token operator">/</span> size<span class="token punctuation">)</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    start <span class="token operator">=</span> i <span class="token operator">*</span> size
    end <span class="token operator">=</span> start <span class="token operator">+</span> size
    result<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>arr<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span>start<span class="token punctuation">,</span> end<span class="token punctuation">)</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> result
<span class="token punctuation">}</span>

<span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span>test<span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span>

<span class="token keyword">const</span> arr1 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">9</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">]</span>
<span class="token function">chunk</span><span class="token punctuation">(</span>arr1<span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span> <span class="token comment">// [[1, 2, 3], [4, 5, 6], [7, 8, 9], [10]]</span>

<span class="token keyword">const</span> arr2 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">9</span><span class="token punctuation">]</span>
<span class="token function">chunk</span><span class="token punctuation">(</span>arr2<span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">)</span> <span class="token comment">// [[1, 2, 3, 4, 5], [6, 7, 8, 9]]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details><h3 id="_3-\u65F6\u95F4\u5904\u7406\u5668" tabindex="-1"><a class="header-anchor" href="#_3-\u65F6\u95F4\u5904\u7406\u5668" aria-hidden="true">#</a> 3. \u65F6\u95F4\u5904\u7406\u5668</h3><details class="custom-container details"><summary>\u70B9\u51FB\u67E5\u770B\u4EE3\u7801</summary><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u65F6\u95F4\u5904\u7406\u5668, \u4F20\u5165 &#39;\u65F6\u95F4\u6233&#39; \u6216 &#39;\u539F\u59CB\u65F6\u95F4\u683C\u5F0F&#39;, \u8FD4\u56DE\u8BE5\u683C\u5F0F\uFF1A2020-10-14 15:01:03</span>
<span class="token keyword">function</span> <span class="token function">getCurrentTime</span><span class="token punctuation">(</span><span class="token parameter">dateStr</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> date <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span>dateStr<span class="token punctuation">)</span>

  <span class="token keyword">const</span> y <span class="token operator">=</span> date<span class="token punctuation">.</span><span class="token function">getFullYear</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token keyword">const</span> m <span class="token operator">=</span> <span class="token function">padZero</span><span class="token punctuation">(</span>date<span class="token punctuation">.</span><span class="token function">getMonth</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span>
  <span class="token keyword">const</span> d <span class="token operator">=</span> <span class="token function">padZero</span><span class="token punctuation">(</span>date<span class="token punctuation">.</span><span class="token function">getDate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

  <span class="token keyword">const</span> hh <span class="token operator">=</span> <span class="token function">padZero</span><span class="token punctuation">(</span>date<span class="token punctuation">.</span><span class="token function">getHours</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
  <span class="token keyword">const</span> mm <span class="token operator">=</span> <span class="token function">padZero</span><span class="token punctuation">(</span>date<span class="token punctuation">.</span><span class="token function">getMinutes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
  <span class="token keyword">const</span> ss <span class="token operator">=</span> <span class="token function">padZero</span><span class="token punctuation">(</span>date<span class="token punctuation">.</span><span class="token function">getSeconds</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

  <span class="token comment">// \u8865\u96F6\u51FD\u6570</span>
  <span class="token keyword">function</span> <span class="token function">padZero</span><span class="token punctuation">(</span><span class="token parameter">date</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> date <span class="token operator">&gt;</span> <span class="token number">9</span> <span class="token operator">?</span> date <span class="token operator">:</span> <span class="token string">&#39;0&#39;</span> <span class="token operator">+</span> date
  <span class="token punctuation">}</span>

  <span class="token keyword">return</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>y<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">-</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>m<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">-</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>d<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>hh<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">:</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>mm<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">:</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>ss<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span>
<span class="token punctuation">}</span>

<span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span>test<span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span>

<span class="token keyword">const</span> timestamp <span class="token operator">=</span> <span class="token number">1602648779952</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">getCurrentTime</span><span class="token punctuation">(</span>timestamp<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// 2020-10-14 12:12:59</span>

<span class="token keyword">const</span> dt <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">getCurrentTime</span><span class="token punctuation">(</span>dt<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// 2020-10-14 12:14:59</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details><h3 id="_4-\u624B\u5199\u6DF1\u62F7\u8D1D-\u9762\u8BD5\u4E13\u7528" tabindex="-1"><a class="header-anchor" href="#_4-\u624B\u5199\u6DF1\u62F7\u8D1D-\u9762\u8BD5\u4E13\u7528" aria-hidden="true">#</a> 4. \u624B\u5199\u6DF1\u62F7\u8D1D\uFF08\u9762\u8BD5\u4E13\u7528\uFF09</h3><details class="custom-container details"><summary>\u70B9\u51FB\u67E5\u770B\u4EE3\u7801</summary><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u53EA\u8003\u8651 3 \u79CD\u7C7B\u578B\uFF1A\u5BF9\u8C61\u3001\u6570\u7EC4\u3001\u666E\u901A\u7C7B\u578B</span>
<span class="token keyword">function</span> <span class="token function">deepClone</span><span class="token punctuation">(</span><span class="token parameter">source</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> source <span class="token operator">!==</span> <span class="token string">&#39;object&#39;</span> <span class="token operator">||</span> source <span class="token operator">===</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token keyword">return</span> source
  <span class="token keyword">let</span> res <span class="token operator">=</span> source<span class="token punctuation">.</span>constructor <span class="token operator">===</span> Array <span class="token operator">?</span> <span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">const</span> key <span class="token keyword">in</span> source<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>source<span class="token punctuation">.</span><span class="token function">hasOwnProperty</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      res<span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">deepClone</span><span class="token punctuation">(</span>source<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> res
<span class="token punctuation">}</span>

<span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span>test<span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span>

<span class="token keyword">const</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token literal-property property">a</span><span class="token operator">:</span> <span class="token string">&#39;a&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">]</span>
<span class="token keyword">const</span> newArr <span class="token operator">=</span> <span class="token function">deepClone</span><span class="token punctuation">(</span>arr<span class="token punctuation">)</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>arr<span class="token punctuation">)</span> <span class="token comment">// [1,{&quot;a&quot;:&quot;a&quot;},[2]]</span>
newArr<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>b <span class="token operator">=</span> <span class="token string">&#39;b&#39;</span>
newArr<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token number">6456</span><span class="token punctuation">)</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>arr<span class="token punctuation">)</span> <span class="token comment">// [1,{&quot;a&quot;:&quot;a&quot;},[2]]</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>newArr<span class="token punctuation">)</span> <span class="token comment">// [1,{&quot;a&quot;:&quot;a&quot;,&quot;b&quot;:&quot;b&quot;},[2,6456]]</span>


<span class="token keyword">const</span> arr2 <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token literal-property property">a</span><span class="token operator">:</span> <span class="token string">&#39;a&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">b</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">b2</span><span class="token operator">:</span> <span class="token string">&#39;b2&#39;</span> <span class="token punctuation">}</span> <span class="token punctuation">}</span>
<span class="token keyword">const</span> newArr2 <span class="token operator">=</span> <span class="token function">deepClone</span><span class="token punctuation">(</span>arr2<span class="token punctuation">)</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>arr2<span class="token punctuation">)</span> <span class="token comment">// {&quot;a&quot;:&quot;a&quot;,&quot;b&quot;:{&quot;b2&quot;:&quot;b2&quot;}}</span>
newArr2<span class="token punctuation">.</span>d <span class="token operator">=</span> <span class="token string">&#39;dd&#39;</span>
newArr2<span class="token punctuation">.</span>b<span class="token punctuation">.</span>b3 <span class="token operator">=</span> <span class="token string">&#39;b3&#39;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>arr2<span class="token punctuation">)</span> <span class="token comment">// {&quot;a&quot;:&quot;a&quot;,&quot;b&quot;:{&quot;b2&quot;:&quot;b2&quot;}}</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>newArr2<span class="token punctuation">)</span> <span class="token comment">// {&quot;a&quot;:&quot;a&quot;,&quot;b&quot;:{&quot;b2&quot;:&quot;b2&quot;,&quot;b3&quot;:&quot;b3&quot;},&quot;d&quot;:&quot;dd&quot;}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details>`,30),o=[e];function c(l,i){return s(),a("div",null,o)}var r=n(p,[["render",c],["__file","data-processing-method.html.vue"]]);export{r as default};
