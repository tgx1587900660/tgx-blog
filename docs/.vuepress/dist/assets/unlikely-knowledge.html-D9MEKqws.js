import{_ as n,o as s,c as a,e}from"./app-CkeFUswH.js";const t={},p=e(`<h1 id="vue-易忘知识点" tabindex="-1"><a class="header-anchor" href="#vue-易忘知识点"><span>Vue 易忘知识点</span></a></h1><div class="custom-container tip"><p class="custom-container-title">说明</p><p>收集了一些平常工作中用的非常少，但又不能忘了的知识点。</p></div><h2 id="_1-指令" tabindex="-1"><a class="header-anchor" href="#_1-指令"><span>1. 指令</span></a></h2><ul><li>v-html：把后端返回带有 html 标签的数据，渲染成对应的网页 UI。使用时会覆盖标签包裹的内容</li><li>v-for： <ul><li>标识 key 值类型：为 String 或 Number</li><li>循环对象（值名索）： v-for=&quot;(value, key, index) in obj&quot; 中 value 是键值, key 是键名, index 是索引</li></ul></li><li>v-slot： <ul><li>具名插槽：v-slot:name1 简写成 #name1，只能用在 组件名或 template 上</li><li>作用于插槽：编写基础组件时，可以在 slot 标签上绑定一些属性，父组件使用时就可以用 #name1=&quot;obj&quot; 中的 obj 来接收这些属性。（相当于数据的子传父）</li></ul></li><li>自定义指令： <ul><li>注册自定义指令及其内部的函数触发时机</li></ul></li></ul><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token comment">// 1. 全局定义自定义指令 t-copy</span>
Vue<span class="token punctuation">.</span><span class="token function">directive</span><span class="token punctuation">(</span><span class="token string">&#39;t-copy&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
  <span class="token comment">// 第一次绑定到 dom 元素时触发（el 是被绑定的 dom 元素，binding 是指令后面的内容）</span>
  <span class="token function">bind</span><span class="token punctuation">(</span><span class="token parameter">el<span class="token punctuation">,</span> binding</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;触发了 v-t-copy 指令的 bing 函数&#39;</span><span class="token punctuation">)</span>
    el<span class="token punctuation">.</span>style<span class="token punctuation">.</span>color <span class="token operator">=</span> binding<span class="token punctuation">.</span>value
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token comment">// 第一次绑定时不触发，dom 更新时触发</span>
  <span class="token function">update</span><span class="token punctuation">(</span><span class="token parameter">el<span class="token punctuation">,</span> binding</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;触发了 v-t-copy 指令的 update 函数&#39;</span><span class="token punctuation">)</span>
    el<span class="token punctuation">.</span>style<span class="token punctuation">.</span>color <span class="token operator">=</span> binding<span class="token punctuation">.</span>value
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

<span class="token comment">// ----------------------------------------------------------</span>
<span class="token comment">// 2. 如果 bind 和 update 逻辑完全一样，可以简写</span>
Vue<span class="token punctuation">.</span><span class="token function">directive</span><span class="token punctuation">(</span><span class="token string">&#39;t-copy&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  el<span class="token punctuation">.</span>style<span class="token punctuation">.</span>color <span class="token operator">=</span> binding<span class="token punctuation">.</span>value
<span class="token punctuation">}</span><span class="token punctuation">)</span>

<span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span>

<span class="token comment">// 3. 组件内使用自定义指令 t-copy</span>
<span class="token operator">&lt;</span>template<span class="token operator">&gt;</span>
  <span class="token operator">&lt;</span>p v<span class="token operator">-</span>t<span class="token operator">-</span>copy<span class="token operator">=</span><span class="token string">&quot;bindingDate&quot;</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>p<span class="token operator">&gt;</span>
<span class="token operator">&lt;</span><span class="token operator">/</span>template<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_2-事件绑定" tabindex="-1"><a class="header-anchor" href="#_2-事件绑定"><span>2. 事件绑定</span></a></h2><ul><li>$event： <ul><li>若事件不携带参数，则方法默认接收原始 dom 事件对象 e</li><li>若事件携带了参数，还想在方法中拿到 原始 dom 事件对象 e 就用 $event</li><li>若子组件传了参数过来，并且自己又携带了参数，则方法中自己的参数会覆盖子组件的参数，此时可用 $event 获取子组件的参数</li></ul></li></ul><h2 id="_3-事件修饰符" tabindex="-1"><a class="header-anchor" href="#_3-事件修饰符"><span>3. 事件修饰符</span></a></h2><ul><li>@click.prevent：阻止事件默认行为。例如：阻止 submit 提交、阻止 a 链接跳转</li><li>@click.stop：阻止冒泡</li></ul><h2 id="_4-按键修饰符" tabindex="-1"><a class="header-anchor" href="#_4-按键修饰符"><span>4. 按键修饰符</span></a></h2><ul><li>@keyup.esc：弹起 esc 时触发</li><li>@keyup.enter：弹起 enter 时触发</li></ul><h2 id="_5-指令修饰符" tabindex="-1"><a class="header-anchor" href="#_5-指令修饰符"><span>5. 指令修饰符</span></a></h2><ul><li>v-model.number：把表单值转为数值类型</li><li>v-model.trim：去掉表单首尾空字符</li><li>v-model.lazy：表单失去焦点时才更新 data 中的数据</li></ul>`,13),o=[p];function l(i,c){return s(),a("div",null,o)}const u=n(t,[["render",l],["__file","unlikely-knowledge.html.vue"]]),d=JSON.parse('{"path":"/frontend/vue/vue2/unlikely-knowledge.html","title":"Vue 易忘知识点","lang":"en-US","frontmatter":{},"headers":[{"level":2,"title":"1. 指令","slug":"_1-指令","link":"#_1-指令","children":[]},{"level":2,"title":"2. 事件绑定","slug":"_2-事件绑定","link":"#_2-事件绑定","children":[]},{"level":2,"title":"3. 事件修饰符","slug":"_3-事件修饰符","link":"#_3-事件修饰符","children":[]},{"level":2,"title":"4. 按键修饰符","slug":"_4-按键修饰符","link":"#_4-按键修饰符","children":[]},{"level":2,"title":"5. 指令修饰符","slug":"_5-指令修饰符","link":"#_5-指令修饰符","children":[]}],"git":{"updatedTime":1660215767000,"contributors":[{"name":"唐干宵","email":"1587900660@qq.com","commits":1}]},"filePathRelative":"frontend/vue/vue2/unlikely-knowledge.md"}');export{u as comp,d as data};
