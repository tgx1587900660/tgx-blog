import{_ as n,o as s,c as a,e as t}from"./app-CkeFUswH.js";const p="/tgx-blog/assets/data-emit-BT5zrhly.png",e={},o=t(`<h1 id="vue3-相关知识" tabindex="-1"><a class="header-anchor" href="#vue3-相关知识"><span>Vue3 相关知识</span></a></h1><h2 id="_1-组件上的-v-model" tabindex="-1"><a class="header-anchor" href="#_1-组件上的-v-model"><span>1. 组件上的 v-model</span></a></h2><div class="custom-container tip"><p class="custom-container-title">有什么作用</p><p>主要是为了 <strong>实现组件内外的数据同步</strong></p></div><ul><li>首先在父组件中 v-bind: 前加上 v-model 指定 某个数据 需要被同步</li><li>然后在子组件用 props 接收 这个数据</li><li>接着在子组件的 emits 数组中声明 <strong>&#39;update:被同步的数据&#39;</strong> 这个自定义事件</li><li>最后在某个时机，用 this.$emit(&#39;update:被同步的数据&#39;, newValue) 发送事件，即可同时在父子组件中同步这个数据</li></ul><details class="custom-container details"><summary>点击查看使用案例</summary><div class="language-html line-numbers-mode" data-ext="html" data-title="html"><pre class="language-html"><code><span class="token comment">&lt;!-- 父组件中指定 title 会被双向同步 --&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>my-component</span> <span class="token attr-name"><span class="token namespace">v-model:</span>title</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>bookTitle<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>my-component</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
  <span class="token comment">// 子组件中进行接收 并用自定义事件 update:title 更新 title 的值</span>
  app<span class="token punctuation">.</span><span class="token function">component</span><span class="token punctuation">(</span><span class="token string">&#39;my-component&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">props</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token literal-property property">title</span><span class="token operator">:</span> String
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token literal-property property">emits</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;update:title&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token literal-property property">template</span><span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">
    &lt;input type=&quot;text&quot;
        :value=&quot;title&quot;
        @input=&quot;$emit(&#39;update:title&#39;, $event.target.value)&quot;&gt;
  </span><span class="token template-punctuation string">\`</span></span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>

  <span class="token comment">// 结果：不论是父组件的 bookTitle ，还是子组件的 $event.target.value</span>
  <span class="token comment">// 都可以修改 title 的值，实现数据同步的目的</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details><h2 id="_2-组件之间的通讯" tabindex="-1"><a class="header-anchor" href="#_2-组件之间的通讯"><span>2. 组件之间的通讯</span></a></h2><h3 id="_1-父传子" tabindex="-1"><a class="header-anchor" href="#_1-父传子"><span>1. 父传子</span></a></h3><div class="custom-container tip"><p class="custom-container-title">提示</p><ul><li>父组件：用 v-bind 传递</li><li>子组件：用 props 接收（这种方法接收的数据是响应式的，父组件数据变了，子组件也会变）</li></ul></div><h3 id="_2-子传父" tabindex="-1"><a class="header-anchor" href="#_2-子传父"><span>2. 子传父</span></a></h3><div class="custom-container tip"><p class="custom-container-title">提示</p><ul><li>子组件：用 emits 自定义事件($emit) 发送</li><li>父组件：用 v-on 监听自定义事件 接收</li></ul></div><h3 id="_3-父子组件双向同步" tabindex="-1"><a class="header-anchor" href="#_3-父子组件双向同步"><span>3. 父子组件双向同步</span></a></h3><div class="custom-container tip"><p class="custom-container-title">提示</p><ul><li>父组件：用 v-model:a=&quot;2&quot; 绑定一个数据 a 给子组件</li><li>子组件：先用 props 接收 a , 再用 emits 自定义事件 [&#39;update:a&#39;] 更新数据 a 即可</li></ul></div><h3 id="_4-兄弟组件共享数据" tabindex="-1"><a class="header-anchor" href="#_4-兄弟组件共享数据"><span>4. 兄弟组件共享数据</span></a></h3><div class="custom-container tip"><p class="custom-container-title">提示</p><ul><li>事先定义一个 eventBus.js 文件，并导出一个 事件中心 bus</li><li>组件 A：引入 bus 并用 this.$emit(&#39;事件名称&#39;, 参数) 发送一个自定义事件</li><li>组件 B：引入 bus 并用 this.$on(&#39;事件名称&#39;, (参数) =&gt; { 处理... }) 接收处理组件 A 发来的数据</li></ul></div><h3 id="_5-后代组件共享数据" tabindex="-1"><a class="header-anchor" href="#_5-后代组件共享数据"><span>5. 后代组件共享数据</span></a></h3><div class="custom-container tip"><p class="custom-container-title">传递方案： provide + inject</p><ul><li>根组件：使用 provide 共享 <strong>某些数据</strong></li><li>后代组件：使用 inject 接受 <strong>这些数据</strong></li></ul></div><details class="custom-container details"><summary>点击查看 【非响应式接收】 案例</summary><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token comment">// 根节点中用 provide 定义 要共享 color myNumber 这两个数据</span>
<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>
  <span class="token operator">...</span>
  <span class="token function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token punctuation">{</span> <span class="token literal-property property">color</span><span class="token operator">:</span> <span class="token string">&#39;red&#39;</span> <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token function">provide</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token punctuation">{</span>
      <span class="token literal-property property">color</span><span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span>color<span class="token punctuation">,</span>
      <span class="token literal-property property">myNumber</span><span class="token operator">:</span> <span class="token number">100</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token literal-property property">methods</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token operator">...</span>
<span class="token punctuation">}</span>

<span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span>

<span class="token comment">// 后代节点中用 inject 接受 color myNumber 这两个数据,</span>
<span class="token comment">// 然后直接用 color myNumber 使用即可</span>
<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>
  <span class="token operator">...</span>
  <span class="token function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token literal-property property">inject</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;color&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;myNumber&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token literal-property property">methods</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token operator">...</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details><details class="custom-container details"><summary>点击查看 【响应式接收】 案例</summary><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token comment">// 根节点中用 provide 定义 要共享 color myNumber 这两个数据</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> computed <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vue&#39;</span> <span class="token comment">// 借助 computed 方法实现响应式</span>
<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>
  <span class="token operator">...</span>
  <span class="token function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token punctuation">{</span> <span class="token literal-property property">color</span><span class="token operator">:</span> <span class="token string">&#39;red&#39;</span> <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token function">provide</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token punctuation">{</span>
      <span class="token literal-property property">color</span><span class="token operator">:</span> <span class="token function">computed</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">this</span><span class="token punctuation">.</span>color<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token comment">// 给 computed 方法传一个箭头函数</span>
      <span class="token literal-property property">myNumber</span><span class="token operator">:</span> <span class="token function">computed</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token number">100</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token literal-property property">methods</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token operator">...</span>
<span class="token punctuation">}</span>

<span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span>

<span class="token comment">// 后代节点中用 inject 接受 color myNumber 这两个数据,</span>
<span class="token comment">// 然后用 color.value  myNumber.value 访问其值</span>
<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>
  <span class="token operator">...</span>
  <span class="token function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token literal-property property">inject</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;color&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;myNumber&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token literal-property property">methods</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token operator">...</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details><div class="custom-container warning"><p class="custom-container-title">注意事项</p><ul><li>这种方案要求：组件有 <strong>嵌套关系</strong></li><li>如下图： <ul><li>如果 B 作为根节点要 <strong>共享数据</strong>，只有 D、G、H 可以接受，E、F 这些组件无法接收</li><li>如果 A 作为根节点要 <strong>共享数据</strong>，则所有子组件可以接受</li></ul></li></ul></div><img src="`+p+'" alt="组件关系示意图" title="组件关系示意图" width="500"><h3 id="_6-vuex-共享数据" tabindex="-1"><a class="header-anchor" href="#_6-vuex-共享数据"><span>6. Vuex 共享数据</span></a></h3><div class="custom-container tip"><p class="custom-container-title">说明</p><p>使用一个 store 来集中共享数据</p></div><h3 id="_7-浏览器存储功能共享" tabindex="-1"><a class="header-anchor" href="#_7-浏览器存储功能共享"><span>7. 浏览器存储功能共享</span></a></h3><div class="custom-container tip"><p class="custom-container-title">说明</p><p>使用浏览器的存储功能共享数据，如：cookie, sessionStorage, localStorage, IndexedDB 等</p></div>',24),l=[o];function c(i,r){return s(),a("div",null,l)}const d=n(e,[["render",c],["__file","vue3-study.html.vue"]]),k=JSON.parse('{"path":"/frontend/vue/vue3/vue3-study.html","title":"Vue3 相关知识","lang":"en-US","frontmatter":{},"headers":[{"level":2,"title":"1. 组件上的 v-model","slug":"_1-组件上的-v-model","link":"#_1-组件上的-v-model","children":[]},{"level":2,"title":"2. 组件之间的通讯","slug":"_2-组件之间的通讯","link":"#_2-组件之间的通讯","children":[{"level":3,"title":"1. 父传子","slug":"_1-父传子","link":"#_1-父传子","children":[]},{"level":3,"title":"2. 子传父","slug":"_2-子传父","link":"#_2-子传父","children":[]},{"level":3,"title":"3. 父子组件双向同步","slug":"_3-父子组件双向同步","link":"#_3-父子组件双向同步","children":[]},{"level":3,"title":"4. 兄弟组件共享数据","slug":"_4-兄弟组件共享数据","link":"#_4-兄弟组件共享数据","children":[]},{"level":3,"title":"5. 后代组件共享数据","slug":"_5-后代组件共享数据","link":"#_5-后代组件共享数据","children":[]},{"level":3,"title":"6. Vuex 共享数据","slug":"_6-vuex-共享数据","link":"#_6-vuex-共享数据","children":[]},{"level":3,"title":"7. 浏览器存储功能共享","slug":"_7-浏览器存储功能共享","link":"#_7-浏览器存储功能共享","children":[]}]}],"git":{"updatedTime":1660817193000,"contributors":[{"name":"唐干宵","email":"1587900660@qq.com","commits":2}]},"filePathRelative":"frontend/vue/vue3/vue3-study.md"}');export{d as comp,k as data};
