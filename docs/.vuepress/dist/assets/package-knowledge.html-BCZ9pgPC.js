import{_ as n,o as s,c as a,e}from"./app-CkeFUswH.js";const t={},l=e(`<h1 id="npm-包管理工具-的使用" tabindex="-1"><a class="header-anchor" href="#npm-包管理工具-的使用"><span>npm 包管理工具 的使用</span></a></h1><div class="custom-container tip"><p class="custom-container-title">说明</p><p>npm 是一个包管理工具，安装 node 时会自动安装。</p></div><h2 id="_1-切换镜像源地址" tabindex="-1"><a class="header-anchor" href="#_1-切换镜像源地址"><span>1. 切换镜像源地址</span></a></h2><div class="custom-container tip"><p class="custom-container-title">为什么要切换？</p><p>使用 npm 下载包，默认是从国外拉取资源的，速度慢。切换为 <strong>国内淘宝镜像</strong> 可以提升下载速度</p></div><ul><li>以下 2 种方式都可以切换下载地址</li></ul><h4 id="_1-直接切换-npm-下载地址" tabindex="-1"><a class="header-anchor" href="#_1-直接切换-npm-下载地址"><span>1. 直接切换 npm 下载地址</span></a></h4><div class="language-xml line-numbers-mode" data-ext="xml" data-title="xml"><pre class="language-xml"><code><span class="token comment">&lt;!-- 查看当前下载包的镜像源 --&gt;</span>
npm config get registry

<span class="token comment">&lt;!-- 将下载包的镜像源切换为 淘宝镜像 --&gt;</span>
npm config set registry=https://registry.npm.taobao.org/
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_2-借助-nrm-切换-npm-的下载地址" tabindex="-1"><a class="header-anchor" href="#_2-借助-nrm-切换-npm-的下载地址"><span>2. 借助 nrm 切换 npm 的下载地址</span></a></h4><div class="language-xml line-numbers-mode" data-ext="xml" data-title="xml"><pre class="language-xml"><code><span class="token comment">&lt;!-- 全局安装 nrm --&gt;</span>
npm i nrm -g

<span class="token comment">&lt;!-- 查看所有可用的 镜像地址 --&gt;</span>
nrm ls

<span class="token comment">&lt;!-- 使用某个 镜像地址 --&gt;</span>
nrm use taobao  （这里使用 淘宝地址）
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>使用这个插件的命令时有可能出错</li></ul><details class="custom-container details"><summary>点击查看 错误详情及解决方案</summary><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token comment">// 解决方案 分三步</span>
<span class="token comment">// 1. 找到 nrm 的位置 C:\\Users\\你的电脑用户名\\AppData\\Roaming\\npm\\node_modules\\nrm</span>
<span class="token comment">// 2. 找到 cli.js 的第 17 行（我的 nrm 版本是 1.2.1）</span>
<span class="token comment">// 3. 做出以下变更并保存即可</span>
<span class="token comment">// 报错的：const NRMRC = path.join(process.env.HOME, &#39;.nrmrc&#39;); // 2021/2/9日 更改</span>
<span class="token comment">// 正常的：const NRMRC = path.join(process.env[(process.platform == &#39;win32&#39;) ? &#39;USERPROFILE&#39; : &#39;HOME&#39;], &#39;.nrmrc&#39;);</span>



<span class="token comment">// 以下是 使用 nrm ls 命令时的报错内容</span>
<span class="token punctuation">[</span>TypeError <span class="token punctuation">[</span><span class="token constant">ERR_INVALID_ARG_TYPE</span><span class="token punctuation">]</span><span class="token operator">:</span> The <span class="token string">&quot;path&quot;</span> argument must be <span class="token keyword">of</span> type string<span class="token punctuation">.</span> Received <span class="token keyword">undefined</span>
  at <span class="token function">validateString</span> <span class="token punctuation">(</span>internal<span class="token operator">/</span>validators<span class="token punctuation">.</span>js<span class="token operator">:</span><span class="token number">122</span><span class="token operator">:</span><span class="token number">11</span><span class="token punctuation">)</span>
  at Object<span class="token punctuation">.</span><span class="token function">join</span> <span class="token punctuation">(</span>path<span class="token punctuation">.</span>js<span class="token operator">:</span><span class="token number">375</span><span class="token operator">:</span><span class="token number">7</span><span class="token punctuation">)</span>
  at Object<span class="token punctuation">.</span><span class="token operator">&lt;</span>anonymous<span class="token operator">&gt;</span> <span class="token punctuation">(</span><span class="token constant">C</span><span class="token operator">:</span>\\Users\\<span class="token number">2019</span>\\AppData\\Roaming\\npm\\node_modules\\nrm\\cli<span class="token punctuation">.</span>js<span class="token operator">:</span><span class="token number">17</span><span class="token operator">:</span><span class="token number">20</span><span class="token punctuation">)</span>
  at Module<span class="token punctuation">.</span><span class="token function">_compile</span> <span class="token punctuation">(</span>internal<span class="token operator">/</span>modules<span class="token operator">/</span>cjs<span class="token operator">/</span>loader<span class="token punctuation">.</span>js<span class="token operator">:</span><span class="token number">1085</span><span class="token operator">:</span><span class="token number">30</span><span class="token punctuation">)</span>
  at Object<span class="token punctuation">.</span>Module<span class="token punctuation">.</span>_extensions<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token function">js</span> <span class="token punctuation">(</span>internal<span class="token operator">/</span>modules<span class="token operator">/</span>cjs<span class="token operator">/</span>loader<span class="token punctuation">.</span>js<span class="token operator">:</span><span class="token number">1114</span><span class="token operator">:</span><span class="token number">10</span><span class="token punctuation">)</span>
  at Module<span class="token punctuation">.</span><span class="token function">load</span> <span class="token punctuation">(</span>internal<span class="token operator">/</span>modules<span class="token operator">/</span>cjs<span class="token operator">/</span>loader<span class="token punctuation">.</span>js<span class="token operator">:</span><span class="token number">950</span><span class="token operator">:</span><span class="token number">32</span><span class="token punctuation">)</span>
  at Function<span class="token punctuation">.</span>Module<span class="token punctuation">.</span><span class="token function">_load</span> <span class="token punctuation">(</span>internal<span class="token operator">/</span>modules<span class="token operator">/</span>cjs<span class="token operator">/</span>loader<span class="token punctuation">.</span>js<span class="token operator">:</span><span class="token number">791</span><span class="token operator">:</span><span class="token number">14</span><span class="token punctuation">)</span>
  at Function<span class="token punctuation">.</span>executeUserEntryPoint <span class="token punctuation">[</span><span class="token keyword">as</span> runMain<span class="token punctuation">]</span> <span class="token punctuation">(</span>internal<span class="token operator">/</span>modules<span class="token operator">/</span>run_main<span class="token punctuation">.</span>js<span class="token operator">:</span><span class="token number">72</span><span class="token operator">:</span><span class="token number">12</span><span class="token punctuation">)</span>
  at internal<span class="token operator">/</span>main<span class="token operator">/</span>run_main_module<span class="token punctuation">.</span>js<span class="token operator">:</span><span class="token number">17</span><span class="token operator">:</span><span class="token number">47</span>
<span class="token punctuation">]</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">code</span><span class="token operator">:</span> <span class="token string">&#39;ERR_INVALID_ARG_TYPE&#39;</span>
<span class="token punctuation">}</span>
</code></pre><div class="highlight-lines"><br><br><br><br><div class="highlight-line"> </div><div class="highlight-line"> </div><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br></div><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details><h2 id="_2-包-的版本管理规范" tabindex="-1"><a class="header-anchor" href="#_2-包-的版本管理规范"><span>2. 包 的版本管理规范</span></a></h2><div class="custom-container tip"><p class="custom-container-title">说明</p><p>包的版本号是以“点分十进制”形式进行定义的，总共有三位数字，例如 2.24.0 其中每一位数字所代表的的含义如下：</p><ul><li>第 1 位数字：大版本</li><li>第 2 位数字：功能版本</li><li>第 3 位数字：Bug 修复版本</li></ul><p>版本号提升的规则：<strong>只要前面的版本号增长了，则后面的版本号归零</strong></p></div><h2 id="_3-包-的内部结构" tabindex="-1"><a class="header-anchor" href="#_3-包-的内部结构"><span>3. 包 的内部结构</span></a></h2><div class="custom-container tip"><p class="custom-container-title">说明</p><p>一个规范的包，它的组成结构，必须符合以下 3 点要求：</p><ul><li>① 包必须以单独的目录而存在</li><li>② 包的顶级目录下要必须包含 package.json 这个包管理配置文件</li><li>③ package.json 中必须包含 name，version，main 这三个属性，分别代表包的名字、版本号、包的入口。 <ul><li>其中 main 节点用来指定 <strong>外界进行导入时，要导入的那个 js 文件路径</strong></li></ul></li></ul></div><h2 id="_4-开发一个自己的-npm-包" tabindex="-1"><a class="header-anchor" href="#_4-开发一个自己的-npm-包"><span>4. 开发一个自己的 npm 包</span></a></h2><div class="custom-container tip"><p class="custom-container-title">步骤说明</p><p>要开发并在 npm 网站上发布一款自己的 npm 包，这里以<strong>开发一个转义 html 文件的包为例</strong>，总共分为以下 9 个步骤。</p></div><h4 id="_1-初始化-包-项目结构" tabindex="-1"><a class="header-anchor" href="#_1-初始化-包-项目结构"><span>1. 初始化 包 项目结构</span></a></h4><ul><li>文件夹应该包含： <ul><li>package.json --------------依赖管理文件</li><li>README.md -----------------说明文档</li><li>index.js ------------------包的入口文件</li></ul></li></ul><h4 id="_2-在各个模块中编写逻辑" tabindex="-1"><a class="header-anchor" href="#_2-在各个模块中编写逻辑"><span>2. 在各个模块中编写逻辑</span></a></h4><h4 id="_3-在-index-js-集中引入模块并暴露" tabindex="-1"><a class="header-anchor" href="#_3-在-index-js-集中引入模块并暴露"><span>3. 在 index.js 集中引入模块并暴露</span></a></h4><h4 id="_4-编写-readme-md-说明文档-这里以-html-文件处理包为例" tabindex="-1"><a class="header-anchor" href="#_4-编写-readme-md-说明文档-这里以-html-文件处理包为例"><span>4. 编写 README.md 说明文档(这里以 html 文件处理包为例)</span></a></h4><ul><li>至少包含以下 6 部分： <ul><li>安装方式</li><li>导入方式</li><li>格式化时间</li><li>转义 HTML 中的特殊字符</li><li>还原 HTML 中的特殊字符</li><li>开源协议</li></ul></li></ul><h4 id="_5-注册-npm-官网的帐号" tabindex="-1"><a class="header-anchor" href="#_5-注册-npm-官网的帐号"><span>5. 注册 npm 官网的帐号</span></a></h4><ul><li>去 npm 官网上注册一个自己的帐号（注册帐号是为了能在终端登录）</li></ul><h4 id="_6-在终端登录自己的-npm-帐号" tabindex="-1"><a class="header-anchor" href="#_6-在终端登录自己的-npm-帐号"><span>6. 在终端登录自己的 npm 帐号</span></a></h4><ul><li>在 npm login 登录之前需要把 下载源 切到 npm 的官方地址（而不是淘宝地址，因为我们要把包发布到 npm 源网站）</li></ul><div class="language-xml line-numbers-mode" data-ext="xml" data-title="xml"><pre class="language-xml"><code><span class="token comment">&lt;!-- 运行 login 命令开始登录 --&gt;</span>
npm login

<span class="token comment">&lt;!-- 然后按提示输入： --&gt;</span>
1. 用户名
2. 密码(密码是盲打的)
3. 邮箱（第一次登录可能要验证邮箱）
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_7-把包发布到-npm-上" tabindex="-1"><a class="header-anchor" href="#_7-把包发布到-npm-上"><span>7. 把包发布到 npm 上</span></a></h4><div class="language-xml line-numbers-mode" data-ext="xml" data-title="xml"><pre class="language-xml"><code><span class="token comment">&lt;!-- 成功登录后，在项目的根目录 运行 publish 命令即可开始发包 --&gt;</span>
npm publish
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_8-去-npm-官网查看自己发的包" tabindex="-1"><a class="header-anchor" href="#_8-去-npm-官网查看自己发的包"><span>8. 去 npm 官网查看自己发的包</span></a></h4><ul><li>完成发布（此时可以在 npm 搜到自己的包了，也可以在本地 npm install xxx 使用了）</li></ul><h4 id="_9-删除-npm-包" tabindex="-1"><a class="header-anchor" href="#_9-删除-npm-包"><span>9. 删除 npm 包</span></a></h4><ul><li><strong>npm unpublish 只能删除 72 小时内的包</strong></li><li><strong>npm unpublish 删除的包 24 小时内不能再次发布</strong></li><li><strong>发包需要慎重，尽量不发没有意义的包</strong></li></ul><div class="language-xml line-numbers-mode" data-ext="xml" data-title="xml"><pre class="language-xml"><code><span class="token comment">&lt;!-- 在项目的根目录 运行 unpublish 命令即可开始删包 --&gt;</span>
npm unpublish 包名 --force
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div>`,35),p=[l];function i(o,c){return s(),a("div",null,p)}const d=n(t,[["render",i],["__file","package-knowledge.html.vue"]]),u=JSON.parse('{"path":"/backend/node/package-knowledge.html","title":"npm 包管理工具 的使用","lang":"en-US","frontmatter":{},"headers":[{"level":2,"title":"1. 切换镜像源地址","slug":"_1-切换镜像源地址","link":"#_1-切换镜像源地址","children":[]},{"level":2,"title":"2. 包 的版本管理规范","slug":"_2-包-的版本管理规范","link":"#_2-包-的版本管理规范","children":[]},{"level":2,"title":"3. 包 的内部结构","slug":"_3-包-的内部结构","link":"#_3-包-的内部结构","children":[]},{"level":2,"title":"4. 开发一个自己的 npm 包","slug":"_4-开发一个自己的-npm-包","link":"#_4-开发一个自己的-npm-包","children":[]}],"git":{"updatedTime":1681896054000,"contributors":[{"name":"唐干宵","email":"1587900660@qq.com","commits":6}]},"filePathRelative":"backend/node/package-knowledge.md"}');export{d as comp,u as data};
