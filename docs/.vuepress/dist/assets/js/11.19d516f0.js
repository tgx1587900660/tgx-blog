(window.webpackJsonp=window.webpackJsonp||[]).push([[11],{455:function(t,s,n){"use strict";n.r(s);var e=n(83),a=Object(e.a)({},(function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("h1",{attrs:{id:"eslint-版本升级"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#eslint-版本升级"}},[t._v("#")]),t._v(" eslint 版本升级")]),t._v(" "),n("div",{staticClass:"custom-block tip"},[n("p",{staticClass:"custom-block-title"},[t._v("起因")]),t._v(" "),n("p",[t._v("我们项目使用的 webpack 版本是 3.12.0，代码检测功能也不够完善，eslint 并不是最新版本。\n然后公司来了个前端 leader，要求我们把所有项目的 eslint 升级到最新版本，并且配置团队规定的 eslint 检测规范。\n因此有了这次的升级体验。")])]),t._v(" "),n("h2",{attrs:{id:"_1-升级eslint及其依赖包的版本"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_1-升级eslint及其依赖包的版本"}},[t._v("#")]),t._v(" 1.升级"),n("code",[t._v("eslint")]),t._v("及其依赖包的版本")]),t._v(" "),n("div",{staticClass:"custom-block tip"},[n("p",{staticClass:"custom-block-title"},[t._v("包管理工具")]),t._v(" "),n("p",[t._v("这里我选择了"),n("code",[t._v("cnpm")]),t._v("作为包管理工具，因为"),n("code",[t._v("npm")]),t._v("经常会因为版本问题而报错，其中"),n("code",[t._v("i")]),t._v("是"),n("code",[t._v("install")]),t._v("的缩写")])]),t._v(" "),n("div",{staticClass:"language-xml extra-class"},[n("pre",{pre:!0,attrs:{class:"language-xml"}},[n("code",[t._v("cnpm i eslint@7.30.0\ncnpm i eslint-loader@4.0.2\ncnpm i babel-eslint@10.1.0\ncnpm i eslint-plugin-standard@3.0.1\ncnpm i eslint-plugin-vue@7.12.1\n")])])]),n("h2",{attrs:{id:"_2-写入eslint的规则"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_2-写入eslint的规则"}},[t._v("#")]),t._v(" 2.写入"),n("code",[t._v("eslint")]),t._v("的规则")]),t._v(" "),n("div",{staticClass:"custom-block tip"},[n("p",{staticClass:"custom-block-title"},[t._v("规则文件的位置")]),t._v(" "),n("p",[t._v("与 node_modules 平级的目录下应该存在一个 .eslintrc.js 文件，以下就是这个文件的内容，也就是我们团队的代码规范约定")])]),t._v(" "),n("details",{staticClass:"custom-block details"},[n("summary",[t._v("点击查看具体规则")]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/**\n * @file eslint config\n * @author\n */")]),t._v("\nmodule"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("exports "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 无需向父目录查找eslint文件")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("root")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 使用babel-eslint解析器")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("parserOptions")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("parser")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'babel-eslint'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("sourceType")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'module'")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 指定脚本的运行环境,每种环境都有一组特定的预定义全局变量")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("env")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("browser")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 数组形式，每个配置继承它前面的配置")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extends")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'plugin:vue/recommended'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'standard'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 省略包名的前缀 eslint-plugin-")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// required to lint *.vue files")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("plugins")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'vue'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 配置额外的全局变量")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("globals")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// value 为 true 允许被重写，为 false 不允许被重写")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("NODE_ENV")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 自定义规则")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("rules")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 使用单引号")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* 示例\n            // bad code\n            let str = \"hello world\"\n\n            // good code\n            let str = 'hello world'\n        */")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("quotes")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'error'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'single'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 三等号")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* 示例\n            // bad code\n            if (a == b) {}\n\n            // good code\n            if (a === b) {}\n        */")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("eqeqeq")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'error'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'always'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 禁止出现未使用过的变量")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token string-property property"}},[t._v("'no-unused-vars'")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'error'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 强制在关键字前后使用一致的空格")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* 示例\n            // bad code\n            if (foo) {\n                //...\n            }else if (bar) {\n                //...\n            }else {\n                //...\n            }\n\n            // good code\n            if (foo) {\n                //...\n            } else if (bar) {\n                //...\n            } else {\n                //...\n            }\n        */")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token string-property property"}},[t._v("'keyword-spacing'")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'error'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                "),n("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("overrides")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                        "),n("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("after")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v("\n                    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                        "),n("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("after")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v("\n                    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("while")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                        "),n("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("after")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v("\n                    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                        "),n("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("after")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v("\n                    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n                "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// https://eslint.org/docs/rules/camelcase")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("camelcase")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'error'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("properties")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'never'")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 缩进使用 4 个空格，并且 switch 语句中的 Case 需要缩进")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// https://eslint.org/docs/rules/indent")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("indent")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'error'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                "),n("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("SwitchCase")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                "),n("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("flatTernaryExpressions")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 数组的括号内的前后禁止有空格")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// https://eslint.org/docs/rules/array-bracket-spacing")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* 示例\n            // bad code\n            const foo = [ 'foo' ];\n            const foo = [ 'foo'];\n            const foo = ['foo' ];\n            const foo = [ 1 ];\n\n            // good code\n            const foo = ['foo'];\n            const foo = [1];\n        */")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token string-property property"}},[t._v("'array-bracket-spacing'")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'error'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'never'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 需要在操作符之前放置换行符")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// https://eslint.org/docs/rules/operator-linebreak")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 'operator-linebreak': ['error', 'before'],")]),t._v("\n\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 在开发阶段打开调试 (区分stag prod)")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// https://eslint.org/docs/rules/no-debugger")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token string-property property"}},[t._v("'no-debugger'")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" process"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("env"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("NODE_ENV")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'production'")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'error'")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'off'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 只有一个参数时，箭头函数体可以省略圆括号")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// https://eslint.org/docs/rules/arrow-parens")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token string-property property"}},[t._v("'arrow-parens'")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'off'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 禁止空语句（可在空语句写注释避免），允许空的 catch 语句")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// https://eslint.org/docs/rules/no-empty")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* 示例\n            // bad code\n            if (foo) {\n            }\n\n            while (foo) {\n            }\n\n            // good code\n            if (foo) {\n                // empty\n            }\n        */")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token string-property property"}},[t._v("'no-empty'")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'error'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("allowEmptyCatch")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 禁止在语句末尾使用分号")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// https://eslint.org/docs/rules/semi")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* 示例\n            // bad code\n            const obj = {};\n\n            // good code\n            const obj = {}\n        */")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("semi")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'error'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'never'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 函数圆括号之前没有空格（挺有争议的）")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// https://eslint.org/docs/rules/space-before-function-paren")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* 示例\n            // bad code\n            function foo () {\n                // ...\n            }\n\n            const bar = function () {\n                // ...\n            }\n\n            // good code\n            function foo() {\n                // ...\n            }\n\n            const bar = function() {\n                // ...\n            }\n        */")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token string-property property"}},[t._v("'space-before-function-paren'")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'error'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                "),n("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("anonymous")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'never'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 匿名函数表达式")]),t._v("\n                "),n("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("named")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'never'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 命名的函数表达式")]),t._v("\n                "),n("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("asyncArrow")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'never'")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 异步的箭头函数表达式")]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 禁止行尾有空格")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// https://eslint.org/docs/rules/no-trailing-spaces")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token string-property property"}},[t._v("'no-trailing-spaces'")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'error'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 注释的斜线或 * 后必须有空格")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// https://eslint.org/docs/rules/spaced-comment")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* 示例\n            // bad code\n            //This is a comment with no whitespace at the beginning\n\n            // good code\n            // This is a comment with a whitespace at the beginning\n        */")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token string-property property"}},[t._v("'spaced-comment'")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'error'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'always'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                "),n("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("line")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                    "),n("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("markers")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'*package'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'!'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'/'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("','")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'='")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n                "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                "),n("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("block")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 前后空格是否平衡")]),t._v("\n                    "),n("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("balanced")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                    "),n("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("markers")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'*package'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'!'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("','")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("':'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'::'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'flow-include'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                    "),n("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("exceptions")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'*'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n                "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// https://eslint.org/docs/rules/no-template-curly-in-string")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 禁止在字符串中使用字符串模板。不限制")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token string-property property"}},[t._v("'no-template-curly-in-string'")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'off'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// https://eslint.org/docs/rules/no-useless-escape")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 禁止出现没必要的转义。不限制")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token string-property property"}},[t._v("'no-useless-escape'")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'off'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// https://eslint.org/docs/rules/no-var")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 禁止使用 var")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token string-property property"}},[t._v("'no-var'")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'error'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// https://eslint.org/docs/rules/prefer-const")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 如果一个变量不会被重新赋值，必须使用 `const` 进行声明。")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* 示例\n            // bad code\n            let a = 3\n            console.log(a)\n\n            // good code\n            const a = 3\n            console.log(a)\n        */")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token string-property property"}},[t._v("'prefer-const'")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'error'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// eslint-plugin-vue@7 新增的规则，暂时先全部关闭")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token string-property property"}},[t._v("'vue/no-dupe-v-else-if'")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'off'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token string-property property"}},[t._v("'vue/component-definition-name-casing'")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'off'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token string-property property"}},[t._v("'vue/one-component-per-file'")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'off'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token string-property property"}},[t._v("'vue/v-slot-style'")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'off'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token string-property property"}},[t._v("'vue/no-arrow-functions-in-watch'")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'off'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token string-property property"}},[t._v("'vue/no-custom-modifiers-on-v-model'")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'off'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token string-property property"}},[t._v("'vue/no-multiple-template-root'")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'off'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token string-property property"}},[t._v("'vue/no-mutating-props'")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'off'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token string-property property"}},[t._v("'vue/no-v-for-template-key'")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'off'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token string-property property"}},[t._v("'vue/no-v-model-argument'")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'off'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token string-property property"}},[t._v("'vue/valid-v-bind-sync'")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'off'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token string-property property"}},[t._v("'vue/valid-v-slot'")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'off'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token string-property property"}},[t._v("'vue/experimental-script-setup-vars'")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'off'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token string-property property"}},[t._v("'vue/no-lone-template'")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'off'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 不允许数组括号内有空格")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// https://github.com/vuejs/eslint-plugin-vue/blob/master/docs/rules/array-bracket-spacing.md")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/**\n         * 示例\n         * bad code\n         * var arr = [ 'foo', 'bar' ];\n         * var arr = ['foo', 'bar' ];\n         * var [ x, y ] = z;\n         *\n         * good code\n         * var arr = ['foo', 'bar', 'baz'];\n         * var arr = [['foo'], 'bar', 'baz'];\n         * var [x, y] = z;\n         */")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token string-property property"}},[t._v("'vue/array-bracket-spacing'")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'error'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'never'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 在箭头函数的箭头之前/之后需要空格")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// https://github.com/vuejs/eslint-plugin-vue/blob/master/docs/rules/arrow-spacing.md")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/**\n         * 示例\n         * bad code\n         * ()=> {};\n         * () =>{};\n         * (a)=> {};\n         * (a) =>{};\n         *\n         * good code\n         * () => {};\n         * (a) => {};\n         * a => a;\n         * () => {'\\n'};\n         */")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token string-property property"}},[t._v("'vue/arrow-spacing'")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'error'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("before")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("after")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// https://github.com/vuejs/eslint-plugin-vue/blob/master/docs/rules/attribute-hyphenation.md")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// vue html 属性小写，连字符")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v('/**\n         * 示例\n         * bad code\n         * <MyComponent myProp="prop" />\n         *\n         * good code\n         * <MyComponent my-prop="prop" />\n         */')]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token string-property property"}},[t._v("'vue/attribute-hyphenation'")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'error'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'always'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// https://github.com/vuejs/eslint-plugin-vue/blob/master/docs/rules/attributes-order.md")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 属性顺序，不限制")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token string-property property"}},[t._v("'vue/attributes-order'")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'off'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 在打开块之后和关闭块之前强制块内的空格")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// https://github.com/vuejs/eslint-plugin-vue/blob/master/docs/rules/block-spacing.md")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/**\n         * 示例\n         * bad code\n         * function foo() {return true;}\n         * if (foo) { bar = 0;}\n         * (a) =>{};function baz() {let i = 0;\n         * return i;\n         * }\n         *\n         * good code\n         * function foo() { return true; }\n         * if (foo) { bar = 0; }\n         */")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token string-property property"}},[t._v("'vue/block-spacing'")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'error'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'always'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// https://github.com/vuejs/eslint-plugin-vue/blob/master/docs/rules/camelcase.md")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 后端数据字段经常不是驼峰，所以不限制 properties，也不限制解构")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v('/**\n         * 示例\n         * bad code\n         * import { no_camelcased } from "external-module"\n         * var my_favorite_color = "#112C85";\n         * obj.do_something = function() {\n         * // ...\n         * };\n         *\n         * good code\n         * import { no_camelcased as camelCased } from "external-module";\n         * var myFavoriteColor   = "#112C85";\n         * var _myFavoriteColor  = "#112C85";\n         * var myFavoriteColor_  = "#112C85";\n         */')]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token string-property property"}},[t._v("'vue/camelcase'")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'error'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("properties")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'never'")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// https://github.com/vuejs/eslint-plugin-vue/blob/master/docs/rules/comma-dangle.md")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 禁止使用拖尾逗号，如 {demo: 'test',}")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v('/**\n         * 示例\n         * bad code\n         * var foo = {\n         * bar: "baz",\n         * qux: "quux",\n         * var arr = [1,2,];\n         * };\n         *\n         * good code\n         * var foo = {\n         * bar: "baz",\n         * qux: "quux"\n         * var arr = [1,2];\n         */')]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token string-property property"}},[t._v("'vue/comma-dangle'")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'error'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'never'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// https://github.com/vuejs/eslint-plugin-vue/blob/master/docs/rules/comment-directive.md")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// vue 文件 template 中允许 eslint-disable eslint-enable eslint-disable-line eslint-disable-next-line")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 行内注释启用/禁用某些规则，配置为 1 即允许")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v('/**\n         * 示例\n         * bad code\n         * <div a="1" />\n         *\n         * good code\n         * <div a="1" b="2" c="3" d="4" />\n         */')]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token string-property property"}},[t._v("'vue/comment-directive'")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'off'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// https://github.com/vuejs/eslint-plugin-vue/blob/master/docs/rules/component-name-in-template-casing.md")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 组件 html 标签的形式，连字符形式，所有 html 标签均会检测，如引入第三方不可避免，可通过 ignores 配置，支持正则，不限制")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token string-property property"}},[t._v("'vue/component-name-in-template-casing'")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'off'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 需要 === 和 !==,不将此规则应用于null")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// https://github.com/vuejs/eslint-plugin-vue/blob/master/docs/rules/eqeqeq.md")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v('/**\n         * 示例\n         * bad code\n         * if (x == 42) { }\n         * if ("" == text) { }\n         * if (obj.getStuff() != undefined) { }\n         * var arr = [1,2,];\n         * };\n         *\n         * good code\n         * a === b\n         * foo === true\n         * bananas !== 1\n         * value === undefined\n         */')]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token string-property property"}},[t._v("'vue/eqeqeq'")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'error'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'always'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'ignore'")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// https://github.com/vuejs/eslint-plugin-vue/blob/master/docs/rules/html-closing-bracket-newline.md")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 单行写法不需要换行，多行需要，不限制")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token string-property property"}},[t._v("'vue/html-closing-bracket-newline'")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'off'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 自关闭标签需要空格")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// https://github.com/vuejs/eslint-plugin-vue/blob/master/docs/rules/html-closing-bracket-spacing.md")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v('/* 示例\n            \x3c!-- bad code --\x3e\n            <div >\n                <div foo="bar" ></div >\n            <div/>\n            <div foo/>\n            <div foo="bar"/>\n\n            \x3c!-- ✓ GOOD --\x3e\n            <div>\n                <div foo="bar"></div>\n            <div />\n            <div foo />\n            <div foo="bar" />\n        */')]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token string-property property"}},[t._v("'vue/html-closing-bracket-spacing'")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'error'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                "),n("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("startTag")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'never'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                "),n("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("endTag")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'never'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                "),n("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("selfClosingTag")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'always'")]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 标签必须有结束标签")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// https://github.com/vuejs/eslint-plugin-vue/blob/master/docs/rules/html-end-tags.md")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* 示例\n            \x3c!-- bad code --\x3e\n            <div>\n            <p>\n\n            \x3c!-- good code --\x3e\n            <div></div>\n            <p></p>\n        */")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token string-property property"}},[t._v("'vue/html-end-tags'")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'error'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// html的缩进.在多行情况下，属性不与第一个属性垂直对齐")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// https://github.com/vuejs/eslint-plugin-vue/blob/master/docs/rules/html-indent.md")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v('/* 示例\n            \x3c!-- bad code --\x3e\n            <div id=""\n\n                 some-attr=""\n            />\n\n            \x3c!-- good code --\x3e\n            <div id=""\n\n                some-attr=""\n            />\n        */')]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token string-property property"}},[t._v("'vue/html-indent'")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'error'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                "),n("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("attribute")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                "),n("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("baseIndent")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                "),n("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("closeBracket")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                "),n("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("alignAttributesVertically")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 在多行情况下，属性是否应与第一个属性垂直对齐")]),t._v("\n                "),n("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("ignores")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// html属性引用采用双引号")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// https://github.com/vuejs/eslint-plugin-vue/blob/master/docs/rules/html-quotes.md")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* 示例\n            \x3c!-- bad code --\x3e\n            <img src='./logo.png' />\n\n            \x3c!-- good code --\x3e\n            <img src=\"./logo.png\" />\n        */")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token string-property property"}},[t._v("'vue/html-quotes'")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'error'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'double'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// https://github.com/vuejs/eslint-plugin-vue/blob/master/docs/rules/html-self-closing.md")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// html tag 是否自闭和，不限制")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token string-property property"}},[t._v("'vue/html-self-closing'")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'off'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// https://github.com/vuejs/eslint-plugin-vue/blob/master/docs/rules/jsx-uses-vars.md")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 当变量在 `JSX` 中被使用了，那么 eslint 就不会报出 `no-unused-vars` 的错误。需要开启 eslint no-unused-vars 规则才适用")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*\n            import HelloWorld from './HelloWorld';\n\n            export default {\n                render () {\n                    return (\n                        <HelloWorld msg=\"world\"/>\n                    )\n                },\n            }\n            此时不会报 `no-unused-vars` 的错误，仅警告\n        */")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token string-property property"}},[t._v("'vue/jsx-uses-vars'")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'warn'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// https://github.com/vuejs/eslint-plugin-vue/blob/master/docs/rules/key-spacing.md")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 属性定义，冒号前没有空格，后面有空格")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* 示例\n            // bad code\n            const obj = { a:1 }\n\n            // good code\n            const obj = { a: 1 }\n        */")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token string-property property"}},[t._v("'vue/key-spacing'")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'error'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("beforeColon")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("afterColon")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// https://github.com/vuejs/eslint-plugin-vue/blob/master/docs/rules/match-component-file-name.md")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 组件名称属性与其文件名匹配，不限制")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token string-property property"}},[t._v("'vue/match-component-file-name'")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'off'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// https://github.com/vuejs/eslint-plugin-vue/blob/master/docs/rules/max-attributes-per-line.md")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 每行属性的最大个数，不限制")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token string-property property"}},[t._v("'vue/max-attributes-per-line'")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'off'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// https://github.com/vuejs/eslint-plugin-vue/blob/master/docs/rules/multiline-html-element-content-newline.md")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 在多行元素的内容前后需要换行符，不限制")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token string-property property"}},[t._v("'vue/multiline-html-element-content-newline'")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'off'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// https://github.com/vuejs/eslint-plugin-vue/blob/master/docs/rules/mustache-interpolation-spacing.md")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// template 中 {{var}}，不限制")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token string-property property"}},[t._v("'vue/mustache-interpolation-spacing'")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'off'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// name属性强制使用连字符形式")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// https://github.com/vuejs/eslint-plugin-vue/blob/master/docs/rules/name-property-casing.md")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* 示例\n            // bad code\n            export default {\n                name: 'MyComponent'\n            }\n\n            // good code\n            export default {\n                name: 'my-component'\n            }\n        */")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token string-property property"}},[t._v("'vue/name-property-casing'")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'error'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'kebab-case'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 禁止在计算属性中执行异步操作")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// https://github.com/vuejs/eslint-plugin-vue/blob/master/docs/rules/no-async-in-computed-properties.md")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* 示例\n            computed: {\n                // bad code\n                pro () {\n                  return Promise.all([new Promise((resolve, reject) => {})])\n                },\n                foo1: async function () {\n                  return await someFunc()\n                },\n                bar () {\n                  return fetch(url).then(response => {})\n                },\n                tim () {\n                  setTimeout(() => { }, 0)\n                },\n                inter () {\n                  setInterval(() => { }, 0)\n                },\n                anim () {\n                  requestAnimationFrame(() => {})\n                },\n\n                // good code\n                foo () {\n                  var bar = 0\n                  try {\n                    bar = bar / this.a\n                  } catch (e) {\n                    return 0\n                  } finally {\n                    return bar\n                  }\n                },\n            }\n        */")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token string-property property"}},[t._v("'vue/no-async-in-computed-properties'")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'error'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 禁止布尔默认值，不限制")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// https://github.com/vuejs/eslint-plugin-vue/blob/master/docs/rules/no-boolean-default.md")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token string-property property"}},[t._v("'vue/no-boolean-default'")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'off'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// https://github.com/vuejs/eslint-plugin-vue/blob/master/docs/rules/no-confusing-v-for-v-if.md")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token string-property property"}},[t._v("'vue/no-confusing-v-for-v-if'")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'off'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// https://github.com/vuejs/eslint-plugin-vue/blob/master/docs/rules/no-dupe-keys.md")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 属性名禁止重复")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* 示例\n            // bad code\n            person: {\n               age: '',\n               age: ''\n            }\n\n            // good code\n            person: {\n               age: '',\n               name: ''\n            }\n        */")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token string-property property"}},[t._v("'vue/no-dupe-keys'")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'error'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// https://github.com/vuejs/eslint-plugin-vue/blob/master/docs/rules/no-duplicate-attributes.md")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 禁止 html 元素中出现重复的属性")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v('/* 示例\n            // bad code\n            <div :a="" :a=""></div>\n\n            // good code\n            <div :a="" :b=""></div>\n        */')]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token string-property property"}},[t._v("'vue/no-duplicate-attributes'")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'error'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// https://github.com/vuejs/eslint-plugin-vue/blob/master/docs/rules/no-multi-spaces.md")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 删除 html 标签中连续多个不用于缩进的空格")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v('/* 示例\n            // bad code\n            <div    :a=""></div>\n\n            // good code\n            <div :a=""></div>\n        */')]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token string-property property"}},[t._v("'vue/no-multi-spaces'")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'error'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// https://github.com/vuejs/eslint-plugin-vue/blob/master/docs/rules/no-parsing-error.md")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 禁止语法错误")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v('/* 示例\n            // bad code\n            <div : / @click="def(">\n                </span>\n            </div id="ghi">\n\n            // good code\n            <div id="" @click="def()">\n                <span></span>\n            </div>\n        */')]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token string-property property"}},[t._v("'vue/no-parsing-error'")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'error'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// https://github.com/vuejs/eslint-plugin-vue/blob/master/docs/rules/no-reserved-keys.md")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 禁止使用保留字，包括Vue")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* 示例\n            // bad code\n            props: {\n                $nextTick () {}\n            }\n\n            // good code\n            props: {\n                next () {}\n            }\n        */")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token string-property property"}},[t._v("'vue/no-reserved-keys'")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'error'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// https://github.com/vuejs/eslint-plugin-vue/blob/master/docs/rules/no-restricted-syntax.md")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 禁止使用特定的语法，不限制")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token string-property property"}},[t._v("'vue/no-restricted-syntax'")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'off'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// https://github.com/vuejs/eslint-plugin-vue/blob/master/docs/rules/no-shared-component-data.md")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// data 属性必须是函数")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* 示例\n            // bad code\n            data: {\n            }\n\n            // good code\n            data() {\n                return {}\n            }\n        */")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token string-property property"}},[t._v("'vue/no-shared-component-data'")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'error'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// https://github.com/vuejs/eslint-plugin-vue/blob/master/docs/rules/no-side-effects-in-computed-properties.md")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 禁止在计算属性对属性进行修改，不限制")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token string-property property"}},[t._v("'vue/no-side-effects-in-computed-properties'")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'off'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 不允许在属性中的等号周围有空格")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// https://github.com/vuejs/eslint-plugin-vue/blob/master/docs/rules/no-spaces-around-equal-signs-in-attribute.md")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v('/* 示例\n            // bad code\n            <div class = "item"></div>\n\n            // good code\n            <div></div>\n        */')]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token string-property property"}},[t._v("'vue/no-spaces-around-equal-signs-in-attribute'")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'error'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// https://github.com/vuejs/eslint-plugin-vue/blob/master/docs/rules/no-template-key.md")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 禁止在 <template> 中使用 key 属性，不限制")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token string-property property"}},[t._v("'vue/no-template-key'")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'off'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 禁止再textarea中使用模板语言")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// https://github.com/vuejs/eslint-plugin-vue/blob/master/docs/rules/no-textarea-mustache.md")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v('/* 示例\n            // bad code\n            <textarea>{{ message }}</textarea>\n\n            // good code\n            <textarea v-model="message" />\n        */')]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token string-property property"}},[t._v("'vue/no-textarea-mustache'")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'error'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// https://github.com/vuejs/eslint-plugin-vue/blob/master/docs/rules/no-unused-components.md")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 禁止 components 中声明的组件在 template 中没有使用")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* 示例\n            // bad code\n            <template>\n                <div>\n                    <h2>Lorem ipsum</h2>\n                </div>\n            </template>\n\n            <script>\n                import TheButton from 'components/TheButton.vue'\n\n                export default {\n                    components: {\n                        TheButton // Unused component\n                    }\n                }\n            <\/script>\n\n            // good code\n            <template>\n                <div>\n                    <TheButton>CTA</TheButton>\n                </div>\n            </template>\n\n            <script>\n                import TheButton from 'components/TheButton.vue'\n\n                export default {\n                    components: {\n                        TheButton\n                    }\n                }\n            <\/script>\n        */")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token string-property property"}},[t._v("'vue/no-unused-components'")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'error'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 禁止在v-for或作用域内使用未使用过的变量")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// https://github.com/vuejs/eslint-plugin-vue/blob/master/docs/rules/no-unused-vars.md")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v('/* 示例\n            <template>\n                // bad code\n                <ol v-for="i in 5">\n                    <li>item</li>\n                </ol>\n\n                // good code\n                <ol v-for="i in 5">\n                    <li>{{ i }}</li>\n                </ol>\n            </template>\n        */')]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token string-property property"}},[t._v("'vue/no-unused-vars'")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'error'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// https://github.com/vuejs/eslint-plugin-vue/blob/master/docs/rules/no-use-v-if-with-v-for.md")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 禁止 v-for 和 v-if 在同一元素上使用，不限制")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token string-property property"}},[t._v("'vue/no-use-v-if-with-v-for'")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'off'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// https://github.com/vuejs/eslint-plugin-vue/blob/master/docs/rules/no-v-html.md")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 禁止使用 v-html，防止 xss，不限制")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token string-property property"}},[t._v("'vue/no-v-html'")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'off'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// https://github.com/vuejs/eslint-plugin-vue/blob/master/docs/rules/object-curly-spacing.md")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 对象写在一行时，大括号里需要空格")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* 示例\n            // bad code\n            var obj = {'foo': 'bar'};\n\n            // good code\n            var obj = { 'foo': 'bar' };\n        */")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token string-property property"}},[t._v("'vue/object-curly-spacing'")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'error'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'always'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// https://github.com/vuejs/eslint-plugin-vue/blob/master/docs/rules/order-in-components.md")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 官方推荐顺序")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token string-property property"}},[t._v("'vue/order-in-components'")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'error'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                "),n("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("order")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n                    "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'el'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                    "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'name'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                    "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'parent'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                    "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'functional'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'delimiters'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'comments'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'components'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'directives'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'filters'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                    "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'extends'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                    "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'mixins'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                    "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'inheritAttrs'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                    "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'model'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'props'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'propsData'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                    "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'data'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                    "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'computed'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                    "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'watch'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// LIFECYCLE_HOOKS: ['beforeCreate', 'created', 'beforeMount', 'mounted', 'beforeUpdate', 'updated', 'activated', 'deactivated', 'beforeDestroy', 'destroyed']")]),t._v("\n                    "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'LIFECYCLE_HOOKS'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                    "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'methods'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'template'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'render'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                    "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'renderError'")]),t._v("\n                "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// https://github.com/vuejs/eslint-plugin-vue/blob/master/docs/rules/prop-name-casing.md")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 组件 props 属性名驼峰命名")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* 示例\n            <script>\n                export default {\n                    props: {\n                        // bad code\n                        'greeting-text': String,\n                        greeting_text: String\n\n                        // good code\n                        greetingText: String,\n                    }\n                }\n            <\/script>\n        */")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token string-property property"}},[t._v("'vue/prop-name-casing'")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'error'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'camelCase'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// https://github.com/vuejs/eslint-plugin-vue/blob/master/docs/rules/require-component-is.md")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// <component> 元素必须要有 :is 属性")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v('/* 示例\n            <template>\n                // bad code\n                <component/>\n                <component is="type"/>\n\n                // good code\n                <component :is="type"/>\n                <component v-bind:is="type"/>\n            </template>\n        */')]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token string-property property"}},[t._v("'vue/require-component-is'")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'error'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// https://github.com/vuejs/eslint-plugin-vue/blob/master/docs/rules/require-default-prop.md")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// props 必须要有默认值，不限制")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token string-property property"}},[t._v("'vue/require-default-prop'")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'off'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// https://github.com/vuejs/eslint-plugin-vue/blob/master/docs/rules/require-direct-export.md")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 组件必须要直接被 export。不限制")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token string-property property"}},[t._v("'vue/require-direct-export'")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'off'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// https://github.com/vuejs/eslint-plugin-vue/blob/master/docs/rules/require-prop-type-constructor.md")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// props 的 type 必须为构造函数，不能为字符串")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v('/* 示例\n            <script>\n                export default {\n                    props: {\n                        // bad code\n                        myProp: "Number",\n                        anotherProp: ["Number", "String"],\n                        myFieldWithBadType: {\n                            type: "Object",\n                            default: function() {\n                                return {}\n                            },\n                        },\n                        myOtherFieldWithBadType: {\n                            type: "Number",\n                            default: 1,\n                        },\n\n                        // good code\n                        myProp: Number,\n                        anotherProp: [Number, String],\n                        myFieldWithBadType: {\n                            type: Object,\n                            default: function() {\n                                return {}\n                            },\n                        },\n                        myOtherFieldWithBadType: {\n                            type: Number,\n                            default: 1,\n                        }\n                    }\n                }\n            <\/script>\n        */')]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token string-property property"}},[t._v("'vue/require-prop-type-constructor'")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'error'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// https://github.com/vuejs/eslint-plugin-vue/blob/master/docs/rules/require-prop-types.md")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// props 必须要有 type。")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* 示例\n            // bad code\n            Vue.component('bar', {\n                props: ['foo']\n            })\n\n            Vue.component('baz', {\n                props: {\n                foo: {},\n                }\n            })\n\n            // good code\n            Vue.component('foo', {\n                props: {\n                    // Without options, just type reference\n                    foo: String,\n                    // With options with type field\n                    bar: {\n                        type: String,\n                        required: true,\n                    },\n                    // With options without type field but with validator field\n                    baz: {\n                        required: true,\n                        validator: function (value) {\n                        return (\n                            value === null ||\n                            Array.isArray(value) && value.length > 0\n                        )\n                        }\n                    }\n                }\n            })\n        */")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token string-property property"}},[t._v("'vue/require-prop-types'")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'error'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// https://github.com/vuejs/eslint-plugin-vue/blob/master/docs/rules/require-render-return.md")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// render 函数必须要有返回值")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* 示例\n            // bad code\n            export default {\n                render (h) {\n                    if (foo) {\n                        return h('div', 'hello')\n                    }\n                }\n            }\n\n            // good code\n            export default {\n                render (h) {\n                    return h('div', 'hello')\n                }\n            }\n        */")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token string-property property"}},[t._v("'vue/require-render-return'")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'error'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// https://github.com/vuejs/eslint-plugin-vue/blob/master/docs/rules/require-v-for-key.md")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// v-for 指令必须要有 key 属性")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v('/* 示例\n            // bad code\n            <div v-for="todo in todos"/>\n\n            // good code\n            <div\n                v-for="todo in todos"\n                :key="todo.id"\n            />\n        */')]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token string-property property"}},[t._v("'vue/require-v-for-key'")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'error'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// https://github.com/vuejs/eslint-plugin-vue/blob/master/docs/rules/require-valid-default-prop.md")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// props 默认值必须有效。不限制")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token string-property property"}},[t._v("'vue/require-valid-default-prop'")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'off'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// https://github.com/vuejs/eslint-plugin-vue/blob/master/docs/rules/return-in-computed-property.md")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 计算属性必须要有返回值")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* 示例\n            computed: {\n                // bad code\n                baz () {\n                    if (this.baf) {\n                        return this.baf\n                    }\n                },\n                baf: function () {}\n\n                // good code\n                foo () {\n                    if (this.bar) {\n                        return this.baz\n                    } else {\n                        return this.baf\n                    }\n                },\n                bar: function () {\n                    return false\n                },\n            }\n        */")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token string-property property"}},[t._v("'vue/return-in-computed-property'")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'error'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// script缩进")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// https://github.com/vuejs/eslint-plugin-vue/blob/master/docs/rules/script-indent.md")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* 示例\n            // bad code\n            let a = {\n              foo: 1,\n              bar: 2\n            }\n\n            // good code\n            let a = {\n                foo: 1,\n                bar: 2\n            }\n        */")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token string-property property"}},[t._v("'vue/script-indent'")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'error'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                "),n("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("baseIndent")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                "),n("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("switchCase")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// https://github.com/vuejs/eslint-plugin-vue/blob/master/docs/rules/singleline-html-element-content-newline.md")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 单行 html 元素后面必须换行。不限制")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token string-property property"}},[t._v("'vue/singleline-html-element-content-newline'")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'off'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// https://github.com/vuejs/eslint-plugin-vue/blob/master/docs/rules/space-infix-ops.md")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 二元操作符两边要有空格")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* 示例\n            // bad code\n            a+b\n            a?b:c\n\n            // good code\n            a + b\n            a ? b : c\n        */")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token string-property property"}},[t._v("'vue/space-infix-ops'")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'error'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// https://github.com/vuejs/eslint-plugin-vue/blob/master/docs/rules/space-unary-ops.md")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// new, delete, typeof, void, yield 等后面必须有空格，一元操作符 -, +, --, ++, !, !! 禁止有空格")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* 示例\n            // bad code\n            typeof!foo\n            void{foo:0}\n            new[foo][0]\n            delete(foo.bar)\n            ++ foo\n\n            // good code\n            typeof !foo\n            void {foo:0}\n            foo--\n        */")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token string-property property"}},[t._v("'vue/space-unary-ops'")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'error'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("words")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("nonwords")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// https://github.com/vuejs/eslint-plugin-vue/blob/master/docs/rules/this-in-template.md")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 不允许在 template 中使用 this")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v('/* 示例\n            // bad code\n            <a :href="this.url">\n                {{ this.text }}\n            </a>\n\n            // good code\n            <a :href="url">\n                {{ text }}\n            </a>\n        */')]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token string-property property"}},[t._v("'vue/this-in-template'")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'error'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'never'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// https://github.com/vuejs/eslint-plugin-vue/blob/master/docs/rules/use-v-on-exact.md")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 强制使用精确修饰词。不限制")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token string-property property"}},[t._v("'vue/use-v-on-exact'")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'off'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// https://github.com/vuejs/eslint-plugin-vue/blob/master/docs/rules/v-bind-style.md")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// v-bind 指令的写法。不限制")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token string-property property"}},[t._v("'vue/v-bind-style'")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'off'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// https://github.com/vuejs/eslint-plugin-vue/blob/master/docs/rules/v-on-function-call.md")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 强制或禁止在 v-on 指令中不带参数的方法调用后使用括号。不限制")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token string-property property"}},[t._v("'vue/v-on-function-call'")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'off'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// v-on 指令的写法，限制简写")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// https://github.com/vuejs/eslint-plugin-vue/blob/master/docs/rules/v-on-style.md")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v('/* 示例\n            // bad code\n            <div v-on:click="foo"/>\n\n            // good code\n            <div @click="foo"/>\n        */')]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token string-property property"}},[t._v("'vue/v-on-style'")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'error'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'shorthand'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 根节点必须合法")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// https://github.com/vuejs/eslint-plugin-vue/blob/master/docs/rules/valid-template-root.md")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v('/* 示例\n            // bad code\n            < template ></ template >\n\n            // good code\n            <template src="foo.html"><div></div></template>\n        */')]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token string-property property"}},[t._v("'vue/valid-template-root'")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'error'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// v-bind 指令必须合法")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// https://github.com/vuejs/eslint-plugin-vue/blob/master/docs/rules/valid-v-bind.md")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v('/* 示例\n            // bad code\n            <div v-bind/>\n            <div :aaa/>\n\n            // good code\n            <div v-bind="foo"/>\n            <div :aaa="foo"/>\n        */')]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token string-property property"}},[t._v("'vue/valid-v-bind'")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'error'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// v-cloak 指令必须合法")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// https://github.com/vuejs/eslint-plugin-vue/blob/master/docs/rules/valid-v-cloak.md")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v('/* 示例\n            // bad code\n            <div v-cloak:aaa/>\n            <div v-cloak.bbb/>\n            <div v-cloak="ccc"/>\n\n            // good code\n             <div v-cloak/>\n        */')]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token string-property property"}},[t._v("'vue/valid-v-cloak'")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'error'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// v-else-if 指令必须合法")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// https://github.com/vuejs/eslint-plugin-vue/blob/master/docs/rules/valid-v-else-if.md")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v('/* 示例\n            // bad code\n            <div v-else-if/>\n            <div v-else-if:aaa="foo"/>\n            <div v-else-if.bbb="foo"/>\n\n            // good code\n            <div v-if="foo"/>\n            <div v-else-if="bar"/>\n        */')]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token string-property property"}},[t._v("'vue/valid-v-else-if'")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'error'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// v-else 指令必须合法")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// https://github.com/vuejs/eslint-plugin-vue/blob/master/docs/rules/valid-v-else.md")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v('/* 示例\n            // bad code\n            <div v-else="foo"/>\n            <div v-else:aaa/>\n            <div v-else.bbb/>\n\n            // good code\n            <div v-if="foo"/>\n            <div v-else/>\n        */')]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token string-property property"}},[t._v("'vue/valid-v-else'")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'error'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// valid-v-for 指令必须合法")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// https://github.com/vuejs/eslint-plugin-vue/blob/master/docs/rules/valid-v-for.md")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v('/* 示例\n            // bad code\n            <div v-for/>\n            <div v-for:aaa="todo in todos"/>\n            <div v-for.bbb="todo in todos"/>\n            <div\n                v-for="todo in todos"\n                is="MyComponent"\n                />\n                <MyComponent v-for="todo in todos"/>\n                <MyComponent\n                    v-for="todo in todos"\n                    :key="foo"\n                />\n\n            // good code\n            <div v-for="todo in todos"/>\n            <MyComponent\n                v-for="todo in todos"\n                :key="todo.id"\n            />\n            <div\n                v-for="todo in todos"\n                :is="MyComponent"\n                :key="todo.id"\n            />\n        */')]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token string-property property"}},[t._v("'vue/valid-v-for'")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'error'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// v-html 指令必须合法")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// https://github.com/vuejs/eslint-plugin-vue/blob/master/docs/rules/valid-v-html.md")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v('/* 示例\n            // bad code\n            <div v-html/>\n            <div v-html:aaa="foo"/>\n            <div v-html.bbb="foo"/>\n\n            // good code\n            <div v-html="foo"/>\n        */')]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token string-property property"}},[t._v("'vue/valid-v-html'")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'error'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// v-if 指令必须合法")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// https://github.com/vuejs/eslint-plugin-vue/blob/master/docs/rules/valid-v-if.md")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v('/* 示例\n            // bad code\n            <div v-if/>\n            <div v-if:aaa="foo"/>\n            <div v-if.bbb="foo"/>\n            <div\n                v-if="foo"\n                v-else\n            />\n            <div\n                v-if="foo"\n                v-else-if="bar"\n            />\n\n            // good code\n            <div v-if="foo"/>\n            <div v-else-if="bar"/>\n            <div v-else/>\n        */')]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token string-property property"}},[t._v("'vue/valid-v-if'")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'error'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// v-model 指令必须合法")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// https://github.com/vuejs/eslint-plugin-vue/blob/master/docs/rules/valid-v-model.md")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v('/* 示例\n            // bad code\n            <input v-model>\n            <input v-model:aaa="foo">\n            <input v-model.bbb="foo">\n            <input v-model="foo + bar">\n            <input v-model="a?.b.c">\n            <input v-model="(a?.b).c">\n            <div v-model="foo"/>\n            <div v-for="todo in todos">\n                <input v-model="todo">\n            </div>\n\n            // good code\n            <input v-model="foo">\n            <input v-model.lazy="foo">\n            <textarea v-model="foo"/>\n            <MyComponent v-model="foo"/>\n            <MyComponent v-model:propName="foo"/>\n            <MyComponent v-model.modifier="foo"/>\n            <MyComponent v-model:propName.modifier="foo"/>\n            <div v-for="todo in todos">\n                <input v-model="todo.name">\n            </div>\n        */')]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token string-property property"}},[t._v("'vue/valid-v-model'")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'error'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// v-on 指令必须合法")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// https://github.com/vuejs/eslint-plugin-vue/blob/master/docs/rules/valid-v-on.md")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v('/* 示例\n            // bad code\n             <div v-on/>\n             <div v-on:click/>\n             <div v-on:click.aaa="foo"/>\n             <div @click/>\n\n            // good code\n             <div @click="foo"/>\n             <div @click.left="foo"/>\n             <div @click.prevent/>\n             <div @click.stop/>\n        */')]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token string-property property"}},[t._v("'vue/valid-v-on'")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'error'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// v-once 指令必须合法")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// https://github.com/vuejs/eslint-plugin-vue/blob/master/docs/rules/valid-v-once.md")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v('/* 示例\n            // bad code\n            <div v-once:aaa/>\n            <div v-once.bbb/>\n            <div v-once="ccc"/>\n\n            // good code\n            <div v-once/>\n        */')]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token string-property property"}},[t._v("'vue/valid-v-once'")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'error'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// v-pre 指令必须合法")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// https://github.com/vuejs/eslint-plugin-vue/blob/master/docs/rules/valid-v-pre.md")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v('/* 示例\n            // bad code\n            <div v-pre:aaa/>\n            <div v-pre.bbb/>\n            <div v-pre="ccc"/>\n\n            // good code\n            <div v-pre/>\n        */')]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token string-property property"}},[t._v("'vue/valid-v-pre'")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'error'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// v-show 指令必须合法")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// https://github.com/vuejs/eslint-plugin-vue/blob/master/docs/rules/valid-v-show.md")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v('/* 示例\n            // bad code\n            <div v-show/>\n            <div v-show:aaa="foo"/>\n            <div v-show.bbb="foo"/>\n            <template v-show="condition" />\n\n            // good code\n            <div v-show="foo"/>\n        */')]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token string-property property"}},[t._v("'vue/valid-v-show'")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'error'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// https://github.com/vuejs/eslint-plugin-vue/blob/master/docs/rules/valid-v-text.md")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// v-text 指令必须合法")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v('/* 示例\n            // bad code\n            <div v-text/>\n            <div v-text:aaa="foo"/>\n            <div v-text.bbb="foo"/>\n\n            // good code\n            <div v-text="foo"/>\n        */')]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token string-property property"}},[t._v("'vue/valid-v-text'")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'error'")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("overrides")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("files")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'*.vue'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("rules")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                "),n("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("indent")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'off'")]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])]),t._v(" "),n("h2",{attrs:{id:"_3-在webpack中配置eslint-loader"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_3-在webpack中配置eslint-loader"}},[t._v("#")]),t._v(" 3.在"),n("code",[t._v("webpack")]),t._v("中配置"),n("code",[t._v("eslint-loader")])]),t._v(" "),n("div",{staticClass:"custom-block tip"},[n("p",{staticClass:"custom-block-title"},[t._v("配置代码的位置")]),t._v(" "),n("p",[t._v("只需要关注高亮部分即可。这是"),n("code",[t._v("eslint-loader")]),t._v("在"),n("code",[t._v("webpack")]),t._v("配置文件中的位置。\n然而"),n("code",[t._v("eslint-loader")]),t._v("的具体配置，你需要进入 "),n("tgx-link",{attrs:{href:"https://gitee.com/tgx-1587900660"}},[t._v("npm 包管理网站")]),t._v("\n搜索并打开"),n("code",[t._v("eslint-loader")]),t._v("插件说明，先找到使用指南"),n("code",[t._v("Usage")]),t._v("，然后复制过来自主定制即可")],1)]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("div",{staticClass:"highlight-lines"},[n("br"),n("br"),n("br"),n("br"),n("br"),n("div",{staticClass:"highlighted"},[t._v(" ")]),n("div",{staticClass:"highlighted"},[t._v(" ")]),n("div",{staticClass:"highlighted"},[t._v(" ")]),n("div",{staticClass:"highlighted"},[t._v(" ")]),n("div",{staticClass:"highlighted"},[t._v(" ")]),n("div",{staticClass:"highlighted"},[t._v(" ")]),n("div",{staticClass:"highlighted"},[t._v(" ")]),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br")]),n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[t._v("module"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("exports "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("entry")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("output")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("module")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("rules")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                "),n("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("test")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token regex"}},[n("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")]),n("span",{pre:!0,attrs:{class:"token regex-source language-regex"}},[t._v("\\.(js|vue)$")]),n("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")])]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                "),n("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("loader")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'eslint-loader'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                "),n("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("exclude")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token regex"}},[n("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")]),n("span",{pre:!0,attrs:{class:"token regex-source language-regex"}},[t._v("node_modules")]),n("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")])]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                "),n("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("include")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                "),n("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("options")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                "),n("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("test")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token regex"}},[n("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")]),n("span",{pre:!0,attrs:{class:"token regex-source language-regex"}},[t._v("\\.vue$")]),n("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")])]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                "),n("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("loader")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'vue-loader'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                "),n("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("options")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                "),n("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("test")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token regex"}},[n("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")]),n("span",{pre:!0,attrs:{class:"token regex-source language-regex"}},[t._v("\\.js$")]),n("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")])]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                "),n("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("loader")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'babel-loader'")]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("h2",{attrs:{id:"_4-旧代码处理步骤"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_4-旧代码处理步骤"}},[t._v("#")]),t._v(" 4.旧代码处理步骤")]),t._v(" "),n("div",{staticClass:"custom-block tip"},[n("p",{staticClass:"custom-block-title"},[t._v("建议用 VS Code 的 eslint 插件修复")]),t._v(" "),n("p",[t._v("但一般情况下忽略了，就没人管了。\n所以我们应该 "),n("tgx-link",{attrs:{href:"https://gitee.com/tgx-1587900660"}},[t._v("配置 eslint 插件")]),t._v("\n在每次保存代码时自动修复")],1)]),t._v(" "),n("ul",[n("li",[n("code",[t._v("eslintignore")]),t._v("先忽略以前的代码\n"),n("blockquote",[n("p",[t._v("与 node_modules 平级的目录下可创建一个"),n("code",[t._v(".eslintignore")]),t._v("文件，用来设置哪些"),n("code",[t._v("不想被 eslint 检测")]),t._v("的文件(或文件夹)。")])])])]),t._v(" "),n("div",{staticClass:"language-xml extra-class"},[n("pre",{pre:!0,attrs:{class:"language-xml"}},[n("code",[t._v("/dist/\n/node_modules/\n")])])]),n("ul",[n("li",[t._v("先使用命令工具循序渐进执行，再手动处理(公司项目都比较庞大，手动修复不太现实)")])]),t._v(" "),n("div",{staticClass:"language-xml extra-class"},[n("pre",{pre:!0,attrs:{class:"language-xml"}},[n("code",[t._v("npx eslint ./src/xxx.vue --fix\n")])])])])}),[],!1,null,null,null);s.default=a.exports}}]);