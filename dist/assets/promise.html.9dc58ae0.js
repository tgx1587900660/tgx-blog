import{_ as n,o as s,c as a,d as p}from"./app.14dae6cf.js";const t={},e=p(`<h1 id="promise-\u76F8\u5173\u77E5\u8BC6" tabindex="-1"><a class="header-anchor" href="#promise-\u76F8\u5173\u77E5\u8BC6" aria-hidden="true">#</a> Promise \u76F8\u5173\u77E5\u8BC6</h1><h2 id="_1-promise-\u662F\u4E3A\u4E86\u89E3\u51B3\u4EC0\u4E48\u95EE\u9898" tabindex="-1"><a class="header-anchor" href="#_1-promise-\u662F\u4E3A\u4E86\u89E3\u51B3\u4EC0\u4E48\u95EE\u9898" aria-hidden="true">#</a> 1. Promise \u662F\u4E3A\u4E86\u89E3\u51B3\u4EC0\u4E48\u95EE\u9898\uFF1F</h2><div class="custom-container tip"><p class="custom-container-title">\u8BF4\u660E</p><p><strong>\u56DE\u8C03\u5730\u72F1</strong> \u8BF4\u7684\u662F\u5728 \u5F02\u6B65\u51FD\u6570 \u4E2D\u5D4C\u5957\u4E86\u591A\u4E2A \u5F02\u6B65\u51FD\u6570\u8FD9\u79CD\u73B0\u8C61\uFF0C\u867D\u7136\u53EF\u4EE5\u5B9E\u73B0\uFF1A<strong>\u7B49\u5F85\u67D0\u4E2A\u5F02\u6B65\u51FD\u6570\u5B8C\u6210\u540E\u518D\u7EE7\u7EED\u6267\u884C\u4E0B\u4E00\u6B65</strong> \u8FD9\u79CD\u9700\u6C42\uFF0C \u4F46\u8FD9\u5BFC\u81F4\u4EE3\u7801\u7EF4\u62A4\u53D8\u5F97\u56F0\u96BE</p></div><ul><li>Promise \u662F\u4E3A\u4E86\u89E3\u51B3 <strong>\u56DE\u8C03\u5730\u72F1</strong> \u7684\u95EE\u9898\u800C\u8BBE\u8BA1\u7684</li></ul><h2 id="_2-promise-\u7684\u6982\u5FF5" tabindex="-1"><a class="header-anchor" href="#_2-promise-\u7684\u6982\u5FF5" aria-hidden="true">#</a> 2. Promise \u7684\u6982\u5FF5</h2><div class="custom-container tip"><p class="custom-container-title">\u6982\u5FF5</p><ul><li>Promise \u662F\u4E00\u4E2A <strong>\u6784\u9020\u51FD\u6570</strong></li><li>\u53EF\u521B\u5EFA\u5B9E\u4F8B\u5BF9\u8C61\uFF1A const p = new Promise((resolve, reject) =&gt; { ... })</li><li>\u5B9E\u4F8B\u5BF9\u8C61 p \uFF0C\u4EE3\u8868\u4E00\u4E2A\u5F02\u6B65\u64CD\u4F5C</li><li>resolve \u548C reject \u662F\u63A5\u6536\u56DE\u8C03\u51FD\u6570\u7684\u5F62\u53C2\uFF0Cresolve() \u5728\u6210\u529F\u65F6\u8C03\u7528\uFF0Creject() \u5728\u5931\u8D25\u65F6\u8C03\u7528</li></ul></div><ul><li>Promise.prototype \u4E0A\u63D0\u4F9B\u4E86\u4E00\u4E9B\u65B9\u6CD5\uFF0C\u4F9B <strong>\u6240\u6709\u5B9E\u4F8B\u5BF9\u8C61</strong> \u8BBF\u95EE: <ul><li>then()</li><li>catch()</li><li>all()</li></ul></li></ul><h2 id="_3-then-\u65B9\u6CD5\u7684\u7279\u6027" tabindex="-1"><a class="header-anchor" href="#_3-then-\u65B9\u6CD5\u7684\u7279\u6027" aria-hidden="true">#</a> 3. then() \u65B9\u6CD5\u7684\u7279\u6027</h2><div class="custom-container tip"><p class="custom-container-title">\u7279\u6027</p><ul><li>\u5982\u679C\u4E0A\u4E00\u4E2A .then() \u65B9\u6CD5\u4E2D\u8FD4\u56DE\u4E86\u4E00\u4E2A\u65B0\u7684 Promise \u5B9E\u4F8B\u5BF9\u8C61\uFF0C\u5219\u53EF\u4EE5\u901A\u8FC7\u4E0B\u4E00\u4E2A .then() \u7EE7\u7EED\u8FDB\u884C\u5904\u7406\u3002</li><li>\u901A\u8FC7 .then() \u65B9\u6CD5\u7684\u94FE\u5F0F\u8C03\u7528\uFF0C\u5C31\u89E3\u51B3\u4E86\u56DE\u8C03\u5730\u72F1\u7684\u95EE\u9898</li></ul></div><ul><li>then() \u65B9\u6CD5\u7528\u6765 <strong>\u9884\u5148\u6307\u5B9A</strong> \u6210\u529F\u548C\u5931\u8D25\u7684\u56DE\u8C03\u51FD\u6570 <ul><li>p.then(\u6210\u529F\u7684\u56DE\u8C03\u51FD\u6570\uFF0C\u5931\u8D25\u7684\u56DE\u8C03\u51FD\u6570)</li><li>\u5176\u4E2D \u6210\u529F\u7684\u56DE\u8C03\u51FD\u6570 \u5FC5\u4F20\uFF0C \u5931\u8D25\u7684\u56DE\u8C03\u51FD\u6570 \u53EF\u9009</li></ul></li></ul><details class="custom-container details"><summary>\u70B9\u51FB\u67E5\u770B then() \u65B9\u6CD5\u8C03\u7528\u6848\u4F8B</summary><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> p <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token operator">...</span><span class="token punctuation">)</span> <span class="token comment">// \u5B9A\u4E49\u4E00\u4E2A\u8FD4\u56DE Promise \u5B9E\u4F8B\u5BF9\u8C61\u7684\u53D8\u91CF</span>

p<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">success1</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token parameter">error1</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">success2</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token parameter">error2</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">success3</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token parameter">error3</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details><h2 id="_4-catch-\u65B9\u6CD5\u7684\u7279\u6027" tabindex="-1"><a class="header-anchor" href="#_4-catch-\u65B9\u6CD5\u7684\u7279\u6027" aria-hidden="true">#</a> 4. catch() \u65B9\u6CD5\u7684\u7279\u6027</h2><div class="custom-container tip"><p class="custom-container-title">\u7279\u6027</p><ul><li>\u5982\u679C\u5728 Promise \u7684\u94FE\u5F0F\u64CD\u4F5C\u4E2D\u53D1\u751F\u9519\u8BEF\uFF0C\u53EF\u7528 Promise.prototype.catch \u65B9\u6CD5\u8FDB\u884C\u6355\u83B7\u548C\u5904\u7406\u3002</li><li>\u5982\u679C catch() \u653E\u5728\u591A\u4E2A then() \u65B9\u6CD5\u4E4B\u540E\u3002\u53EA\u8981\u6709\u4E00\u4E2A then() \u53D1\u751F\u9519\u8BEF\uFF0C\u5C31\u7EC8\u6B62\u4E0B\u4E00\u4E2A then() \u6267\u884C\u800C\u76F4\u63A5\u8FDB\u5165 catch() \u65B9\u6CD5</li><li>\u5982\u679C catch() \u653E\u5728\u6700\u524D\u9762\u3002\u5219 catch() \u540E\u9762\u7684 then() \u65B9\u6CD5\u4ECD\u7136\u53EF\u4EE5\u6267\u884C</li></ul></div><details class="custom-container details"><summary>\u70B9\u51FB\u67E5\u770B catch() \u65B9\u6CD5\u8C03\u7528\u6848\u4F8B</summary><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> p1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token operator">...</span><span class="token punctuation">)</span> <span class="token comment">// \u5B9A\u4E49\u4E00\u4E2A\u8FD4\u56DE Promise \u5B9E\u4F8B\u5BF9\u8C61\u7684\u53D8\u91CF</span>

p1<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">success1</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token parameter">error1</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">success2</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token parameter">error2</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">success3</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token parameter">error3</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token parameter">err</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token comment">// \u53EA\u8981\u6709\u4E00\u4E2A then() \u51FA\u9519\uFF0C\u5C31\u76F4\u63A5\u8DF3\u5230\u8FD9\u4E00\u6B65</span>

<span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">-</span>

<span class="token keyword">const</span> p2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token operator">...</span><span class="token punctuation">)</span> <span class="token comment">// \u5B9A\u4E49\u4E00\u4E2A\u8FD4\u56DE Promise \u5B9E\u4F8B\u5BF9\u8C61\u7684\u53D8\u91CF</span>

p2<span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token parameter">err</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token comment">// \u6355\u83B7\u9519\u8BEF\u540E\uFF0C\u7EE7\u7EED\u6267\u884C\u540E\u9762\u7684 then()</span>
  <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">success1</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token parameter">error1</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">success2</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token parameter">error2</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">success3</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token parameter">error3</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details><h2 id="_5-all-\u65B9\u6CD5\u7684\u7279\u6027" tabindex="-1"><a class="header-anchor" href="#_5-all-\u65B9\u6CD5\u7684\u7279\u6027" aria-hidden="true">#</a> 5. all() \u65B9\u6CD5\u7684\u7279\u6027</h2><div class="custom-container tip"><p class="custom-container-title">\u7279\u6027</p><p>Promise.all() \u65B9\u6CD5\u4F1A\u53D1\u8D77\u5E76\u884C\u7684 Promise \u5F02\u6B65\u64CD\u4F5C\uFF0C\u7B49\u6240\u6709\u7684\u5F02\u6B65\u64CD\u4F5C\u5168\u90E8\u7ED3\u675F\u540E\u624D\u4F1A\u6267\u884C\u4E0B\u4E00\u6B65\u7684 .then \u64CD\u4F5C\uFF08\u7B49\u5F85\u673A\u5236\uFF09\u3002</p></div><details class="custom-container details"><summary>\u70B9\u51FB\u67E5\u770B all() \u65B9\u6CD5\u8C03\u7528\u6848\u4F8B</summary><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u5B9A\u4E49 3 \u4E2A\u8FD4\u56DE Promise \u5B9E\u4F8B\u5BF9\u8C61\u7684\u53D8\u91CF</span>
<span class="token keyword">const</span> p1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token operator">...</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> p2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token operator">...</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> p3 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token operator">...</span><span class="token punctuation">)</span>

Promise<span class="token punctuation">.</span><span class="token function">all</span><span class="token punctuation">(</span><span class="token punctuation">[</span>p1<span class="token punctuation">,</span> p2<span class="token punctuation">,</span> p3<span class="token punctuation">]</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">[</span>res1<span class="token punctuation">,</span> res2<span class="token punctuation">,</span> res3<span class="token punctuation">]</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u7B49\u5F85 p1 p2 p3 \u90FD\u5B8C\u6210\u540E\u624D\u8FDB\u5165\u8FD9\u91CC</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res1<span class="token punctuation">,</span> res2<span class="token punctuation">,</span> res3<span class="token punctuation">)</span> <span class="token comment">// \u5206\u522B\u5BF9\u5E94 p1 p2 p3 \u7684\u7ED3\u679C</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token parameter">err</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details><h2 id="_6-race-\u65B9\u6CD5\u7684\u7279\u6027" tabindex="-1"><a class="header-anchor" href="#_6-race-\u65B9\u6CD5\u7684\u7279\u6027" aria-hidden="true">#</a> 6. race() \u65B9\u6CD5\u7684\u7279\u6027</h2><div class="custom-container tip"><p class="custom-container-title">\u7279\u6027</p><p>Promise.race() \u65B9\u6CD5\u4F1A\u53D1\u8D77\u5E76\u884C\u7684 Promise \u5F02\u6B65\u64CD\u4F5C\uFF0C\u53EA\u8981\u4EFB\u4F55\u4E00\u4E2A\u5F02\u6B65\u64CD\u4F5C\u5B8C\u6210\uFF0C\u5C31\u7ACB\u5373\u6267\u884C\u4E0B\u4E00\u6B65\u7684 .then \u64CD\u4F5C\uFF08\u8D5B\u8DD1\u673A\u5236\uFF09\u3002</p></div><details class="custom-container details"><summary>\u70B9\u51FB\u67E5\u770B race() \u65B9\u6CD5\u8C03\u7528\u6848\u4F8B</summary><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u5B9A\u4E49 3 \u4E2A\u8FD4\u56DE Promise \u5B9E\u4F8B\u5BF9\u8C61\u7684\u53D8\u91CF</span>
<span class="token keyword">const</span> p1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token operator">...</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> p2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token operator">...</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> p3 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token operator">...</span><span class="token punctuation">)</span>

Promise<span class="token punctuation">.</span><span class="token function">race</span><span class="token punctuation">(</span><span class="token punctuation">[</span>p1<span class="token punctuation">,</span> p2<span class="token punctuation">,</span> p3<span class="token punctuation">]</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">res</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u53EA\u8981\u6709\u4E00\u4E2A\u5B8C\u6210\u4E86\uFF0C\u5C31\u8FDB\u5165\u8FD9\u91CC</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span> <span class="token comment">// \u8C01\u6700\u5FEB\u5C31\u662F\u8C01\u7684\u7ED3\u679C</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token parameter">err</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details><h2 id="_7-\u5C01\u88C5\u4E00\u4E2A\u5F02\u6B65\u8BFB\u53D6\u6587\u4EF6\u7684\u65B9\u6CD5" tabindex="-1"><a class="header-anchor" href="#_7-\u5C01\u88C5\u4E00\u4E2A\u5F02\u6B65\u8BFB\u53D6\u6587\u4EF6\u7684\u65B9\u6CD5" aria-hidden="true">#</a> 7. \u5C01\u88C5\u4E00\u4E2A\u5F02\u6B65\u8BFB\u53D6\u6587\u4EF6\u7684\u65B9\u6CD5</h2><div class="custom-container tip"><p class="custom-container-title">\u7279\u6027</p><p>\u5982\u679C\u60F3\u8981\u521B\u5EFA <strong>\u5177\u4F53\u7684\u5F02\u6B65\u64CD\u4F5C</strong>\uFF0C\u5219\u9700\u8981\u5728 new Promise() \u6784\u9020\u51FD\u6570\u671F\u95F4\uFF0C\u4F20\u9012\u4E00\u4E2A <strong>\u51FD\u6570</strong>\uFF0C\u5C06\u5177\u4F53\u7684\u5F02\u6B65\u64CD\u4F5C\u5B9A\u4E49\u5230\u51FD\u6570\u5185\u90E8\u3002</p></div><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u5728 .js \u6587\u4EF6\u4E2D</span>

<span class="token keyword">import</span> fs <span class="token keyword">from</span> <span class="token string">&#39;fs&#39;</span>

<span class="token keyword">function</span> <span class="token function">getFile</span><span class="token punctuation">(</span><span class="token parameter">filePath</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// resolve, reject \u662F\u4E24\u4E2A\u65B9\u6CD5\u5F62\u53C2\uFF0C</span>
    <span class="token comment">// \u5206\u522B\u63A5\u6536 then(\u6210\u529F\u65B9\u6CD5, \u5931\u8D25\u65B9\u6CD5) \u91CC\u9762\u7684 \u6210\u529F\u65B9\u6CD5, \u5931\u8D25\u65B9\u6CD5</span>
    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        fs<span class="token punctuation">.</span><span class="token function">readFile</span><span class="token punctuation">(</span>filePath<span class="token punctuation">,</span> <span class="token string">&#39;utf8&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">err</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token function">reject</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span>
            <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span>
<span class="token comment">// \u6D4B\u8BD5</span>
<span class="token function">getFile</span><span class="token punctuation">(</span><span class="token string">&#39;./test.txt&#39;</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">res</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token parameter">err</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>err<span class="token punctuation">.</span>message<span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,23),o=[e];function c(l,i){return s(),a("div",null,o)}var u=n(t,[["render",c],["__file","promise.html.vue"]]);export{u as default};
