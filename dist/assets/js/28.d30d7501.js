(window.webpackJsonp=window.webpackJsonp||[]).push([[28],{472:function(t,a,s){"use strict";s.r(a);var v=s(83),l=Object(v.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"vue-问答整理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#vue-问答整理"}},[t._v("#")]),t._v(" vue 问答整理")]),t._v(" "),s("h2",{attrs:{id:"_1-说下你对-mvvm-的理解"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-说下你对-mvvm-的理解"}},[t._v("#")]),t._v(" 1. 说下你对 MVVM 的理解")]),t._v(" "),s("ul",[s("li",[t._v("M 指 model 是页面所依赖的数据源")]),t._v(" "),s("li",[t._v("V 指 view 是页面的 dom 结构")]),t._v(" "),s("li",[t._v("VM 指 ViewModel 是 Vue 实例，联系 M 和 V 的桥梁")])]),t._v(" "),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[t._v("说明")]),t._v(" "),s("p",[t._v("页面、数据都是千变万化的，但二者联系的桥梁是可以不变的。")])]),t._v(" "),s("p",[t._v("若我们把页面看成 UI ，把数据看成 data，则得到一个公式：")]),t._v(" "),s("div",{staticClass:"language-xml line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-xml"}},[s("code",[t._v("UI = render(data)\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("p",[t._v("render() 是一个方法，它把数据(data)填充到了页面(UI)中，从而形成了我们看到的页面。开发 Vue 就是在开发一个 render() 方法， 而学习 Vue 就是在学习 render() 这个方法怎么使用。")]),t._v(" "),s("h2",{attrs:{id:"_2-单页面应用程序-spa-优缺点"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-单页面应用程序-spa-优缺点"}},[t._v("#")]),t._v(" 2. 单页面应用程序（SPA）优缺点 ?")]),t._v(" "),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[t._v("单页面应用程序的特点")]),t._v(" "),s("p",[t._v("单页面应用程序将所有的功能局限于一个 web 页面中，仅在该 web 页面初始化时加载相应的资源（ HTML、\nJavaScript 和 CSS）。\n一旦页面加载完成了，SPA 不会因为用户的操作而进行页面的重新加载或跳转。而是利用 JavaScript 动态地变换\nHTML 的内容，从而实现页面与用户的交互。")])]),t._v(" "),s("h3",{attrs:{id:"_1-单页应用的优点"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-单页应用的优点"}},[t._v("#")]),t._v(" 1. 单页应用的优点")]),t._v(" "),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[t._v("主要 3 个优点")]),t._v(" "),s("ul",[s("li",[t._v("良好的交互体验\n"),s("ul",[s("li",[t._v("内容改变无需重新加载整个页面")]),t._v(" "),s("li",[t._v("网页数据也是 Ajax 异步获取的")]),t._v(" "),s("li",[t._v("没有页面跳转，不会出现 “白屏现象”")])])]),t._v(" "),s("li",[t._v("良好的前后端工作分离模式\n"),s("ul",[s("li",[t._v("后端专注于提供 API，更容易实现 API 接口的复用")]),t._v(" "),s("li",[t._v("前端专注于页面渲染，更利于前端工程化的发展")])])]),t._v(" "),s("li",[t._v("减轻服务器的压力\n"),s("ul",[s("li",[t._v("服务器只提供数据，不负责页面的合成与逻辑的处理，吞吐能力会提高几倍")])])])])]),t._v(" "),s("h3",{attrs:{id:"_2-单页应用的缺点"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-单页应用的缺点"}},[t._v("#")]),t._v(" 2. 单页应用的缺点")]),t._v(" "),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[t._v("主要 2 个缺点")]),t._v(" "),s("ul",[s("li",[t._v("首屏加载慢（4种解决方案）\n"),s("ul",[s("li",[t._v("路由懒加载")]),t._v(" "),s("li",[t._v("代码压缩")]),t._v(" "),s("li",[t._v("CDN加速")]),t._v(" "),s("li",[t._v("网络传输压缩")])])]),t._v(" "),s("li",[t._v("不利于 SEO （1种解决方案）\n"),s("ul",[s("li",[t._v("SSR 服务器端渲染")])])])])])])}),[],!1,null,null,null);a.default=l.exports}}]);